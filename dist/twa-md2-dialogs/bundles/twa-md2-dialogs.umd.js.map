{"version":3,"file":"twa-md2-dialogs.umd.js.map","sources":["ng://twa-md2-dialogs/lib/prompt-dialog/match-validator.directive.ts","ng://twa-md2-dialogs/lib/confirm-dialog/twa-confirm-dialog.component.ts",null,"ng://twa-md2-dialogs/lib/prompt-dialog/twa-prompt-dialog.component.ts","ng://twa-md2-dialogs/lib/twa-dialogs.module.ts"],"sourcesContent":["import { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n@Directive({\n    selector: '[tm-match][formControlName],[tm-match][formControl],[tm-match][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => MatchValidator), multi: true }\n    ]\n})\nexport class MatchValidator implements Validator {\n    constructor( @Attribute('tm-match') public match: string) {}\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        // self value (e.g. retype password)\n        const v = c.value;\n\n        // control value (e.g. password)\n        const e = c.root.get(this.match);\n\n        // value not equal\n        if (e && v !== e.value) {\n            return {\n                match: false\n            };\n        }\n        return null;\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { SafeHtml } from '@angular/platform-browser';\n\n@Component({\n    selector: 'twa-app-confirm-dialog',\n    // templateUrl: './twa-confirm-dialog.component.html',\n    // styleUrls: ['./twa-confirm-dialog.component.css'],\n    template: `\n    <h2>{{ title }}</h2>\n    <p [innerHtml]=\"messageHtml\"></p>\n\n    <button type=\"button\" mat-raised-button\n        (click)=\"dialogRef.close(true)\">{{ okText }}</button>\n    <button type=\"button\" mat-button *ngIf=\"cancelText > ''\"\n        (click)=\"dialogRef.close()\">{{ cancelText }}</button>\n    `\n})\n\nexport class TWAConfirmDialogComponent {\n\n    public title: string;\n    public message: string;\n    public messageHtml: SafeHtml;\n    public okText: string;\n    public cancelText: string;\n\n    constructor(public dialogRef: MatDialogRef<TWAConfirmDialogComponent>) {\n\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { map, startWith } from 'rxjs/operators';\n\nimport { MatchValidator } from './match-validator.directive';\n\nexport interface ITWAPromptField {\n    key: string;\n    label: string;\n    type: string;\n    fxFlex: string;\n    value: string;\n    options: any[];\n    autocomplete: any;\n    rows: any[];\n    validation: any;\n    validationMessages?: any;\n}\n\n@Component({\n    selector: 'twa-app-prompt-dialog',\n    // templateUrl: './twa-prompt-dialog.component.html',\n    // styleUrls: ['./twa-prompt-dialog.component.css']\n    styles: ['.mat-error { display: block; margin: -15px 0 15px; }'],\n    template: `\n    <h2>{{ title }}</h2>\n    <p [innerHtml]=\"messageHtml\"></p>\n\n    <form novalidate (ngSubmit)=\"submitForm(form.value)\" [formGroup]=\"form\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div *ngFor=\"let prop of fields\" fxFlex=\"{{prop.fxFlex ? ('calc(' + prop.fxFlex + ' - 10px)') : '100%'}}\" fxLayout=\"column\">\n            <div [ngSwitch]=\"prop.type\" fxFlex=\"100%\">\n                <div *ngSwitchCase=\"'text'\">\n                    <mat-form-field *ngIf=\"!prop.autocomplete\" fxFlex>\n                        <input matInput placeholder=\"{{prop.label}}\"\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n                    </mat-form-field>\n                    <div *ngIf=\"prop.autocomplete\" fxFlex>\n                        <mat-form-field fxFlex>\n                            <input matInput placeholder=\"{{prop.label}}\"\n                                [formControlName]=\"prop.key\"\n                                [matAutocomplete]=\"auto\"\n                                (blur)=\"acCheckBlur(prop)\"\n                                [id]=\"prop.key\" [type]=\"prop.type\">\n                        </mat-form-field>\n                        <mat-autocomplete #auto=\"matAutocomplete\"\n                            (optionSelected)=\"acClick(prop, $event)\">\n                            <mat-option *ngFor=\"let option of prop.autocomplete.filteredOptions | async\"\n                                [value]=\"option\">\n                            {{ option }}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"'password'\">\n                    <mat-form-field fxFlex>\n                        <input matInput type=\"password\" placeholder=\"{{prop.label}}\"\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n                    </mat-form-field>\n                </div>\n                <div *ngSwitchCase=\"'textarea'\">\n                    <mat-form-field fxFlex>\n                        <textarea matInput placeholder=\"{{prop.label}}\" rows=\"{{prop.rows||'3'}}\" autosize\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\" [type]=\"prop.type\"></textarea>\n                    </mat-form-field>\n                </div>\n                <div *ngSwitchCase=\"'number'\">\n                    <mat-form-field fxFlex>\n                        <input matInput placeholder=\"{{prop.label}}\"\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\" [type]=\"prop.type\">\n                   </mat-form-field>\n                </div>\n                <div *ngSwitchCase=\"'date'\">\n                    <mat-form-field fxFlex>\n                        <input matInput [matDatepicker]=picker placeholder=\"{{prop.label}}\"\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\">\n                        <mat-datepicker #picker></mat-datepicker>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    </mat-form-field>\n                </div>\n                <div *ngSwitchCase=\"'time'\">\n                    <mat-form-field fxFlex>\n                        <input matInput [ngxTimepicker]=\"tpicker\" placeholder=\"{{prop.label}}\"\n                            [format]=\"24\"\n                            [formControlName]=\"prop.key\"\n                            [id]=\"prop.key\">\n                        <ngx-material-timepicker #tpicker></ngx-material-timepicker>\n                    </mat-form-field>\n                </div>\n\n                <div *ngSwitchCase=\"'radio'\" fxLayout=\"column\">\n                    <div _ngcontent-c20=\"\" style=\"height: 20px;\">\n                        <label _ngcontent-c20=\"\" style=\"transform: translateY(-1.28125em) scale(0.75)\n                                perspective(100px)\n                                translateZ(0.001px);\n                                -ms-transform: translateY(-1.28125em)\n                                scale(0.75);width: 133.33333333%;margin: 20px 0 0 0;font-weight: 100;color: #666;\">\n                            {{prop.label}}\n                        </label>\n                    </div>\n                    <mat-radio-group [formControlName]=\"prop.key\" [name]=\"prop.key\" fxLayout=\"column\" style=\"margin-top: 14px;\">\n                        <mat-radio-button [value]=\"option.value\" *ngFor=\"let option of prop.options\">\n                            {{option.label}}\n                        </mat-radio-button>\n                    </mat-radio-group>\n                </div>\n\n                <div *ngSwitchCase=\"'select'\">\n                    <mat-form-field fxFlex>\n                        <mat-select [formControlName]=\"prop.key\" placeholder=\"{{prop.label}}\">\n                            <mat-option *ngFor=\"let option of prop.options\" [value]=\"option.value\">\n                                {{ option.label }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"error\" *ngIf=\"form.get(prop.key).errors\" fxFlex=\"100%\">\n            </div>\n            <div class=\"error\" *ngIf=\"form.get(prop.key).invalid && (form.get(prop.key).dirty || form.get(prop.key).touched)\" fxFlex=\"100%\">\n                <mat-error *ngIf=\"form.get(prop.key).errors.required\">\n                    <div *ngIf=\"drawCustomErrors(prop, 'required')\">\n                        {{prop.validationMessages.required}}\n                    </div>\n                    <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.required\">\n                        The field {{ prop.label }} is required.\n                    </div>\n                </mat-error>\n                <mat-error *ngIf=\"form.get(prop.key).errors.match\">\n                    <div *ngIf=\"drawCustomErrors(prop, 'match')\">\n                        {{prop.validationMessages.match}}\n                    </div>\n                    <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.match\">\n                        The fields doesn't match.\n                    </div>\n                </mat-error>\n                <mat-error *ngIf=\"form.get(prop.key).errors.min\">\n                    <div *ngIf=\"drawCustomErrors(prop, 'min')\">\n                        {{prop.validationMessages.min}}\n                    </div>\n                    <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.min\">\n                        The minimal value is {{form.get(prop.key).errors.min.min}}.\n                    </div>\n                </mat-error>\n                <mat-error *ngIf=\"form.get(prop.key).errors.max\">\n                    <div *ngIf=\"drawCustomErrors(prop, 'max')\">\n                        {{prop.validationMessages.max}}\n                    </div>\n                    <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.max\">\n                        The max value is {{form.get(prop.key).errors.max.max}}.\n                    </div>\n                </mat-error>\n            </div>\n        </div>\n    </form>\n\n    <button type=\"button\" mat-raised-button\n        (click)=\"send()\">{{ okText }}</button>\n    <button type=\"button\" mat-button\n        (click)=\"dialogRef.close(false)\">{{ cancelText }}</button>\n\n    `\n})\nexport class TWAPromptDialogComponent implements OnInit {\n\n    public form: FormGroup = new FormGroup({});\n    formSubmitEv: EventEmitter<any> = new EventEmitter();\n\n    public title: string;\n    public message: string;\n    public messageHtml: SafeHtml;\n    public fields: ITWAPromptField[];\n    public okText: string;\n    public cancelText: string;\n    public onSubmit: any;\n\n    constructor(public dialogRef: MatDialogRef<TWAPromptDialogComponent>) {\n    }\n\n    ngOnInit() {\n\n        const formGroup = {};\n        for (const i in this.fields) {\n            if (this.fields.hasOwnProperty(i)) {\n                formGroup[this.fields[i].key] = new FormControl(\n                    this.fields[i].value || '',\n                    this.mapValidators(this.fields[i].validation, this.fields[i].key)\n                );\n                if (typeof this.fields[i].autocomplete !== 'undefined' && this.fields[i].autocomplete !== undefined) {\n                    this.fields[i].autocomplete.filteredOptions = this.getFormGroupEvent(formGroup, i);\n                }\n            }\n        }\n\n        this.form = new FormGroup(formGroup);\n\n    }\n\n    getFormGroupEvent(formGroup, i) {\n        return formGroup[this.fields[i].key].valueChanges.pipe(\n            startWith(''),\n            map(filterValue => filterValue ? this._filterValues(filterValue, this.fields[i].autocomplete.options) :\n                this.fields[i].autocomplete.options.slice())\n        );\n    }\n\n    log(object: any) {\n        console.log(object);\n    }\n\n    private _filterValues(value, options) {\n\n        const filteredValue = value.toLowerCase();\n\n        return options.filter(option => option.toLowerCase().indexOf(filteredValue) >= 0);\n\n    }\n\n    getFormSubmitEv() {\n            return this.formSubmitEv;\n    }\n\n    send() {\n            let i;\n            this.form.updateValueAndValidity();\n            if (this.form.status !== 'INVALID') {\n                    this.dialogRef.close(this.form.value);\n            } else {\n                    for (i in this.form.controls) {\n                    // console.log(this.form.controls[i]);\n                            if (this.form.controls.hasOwnProperty(i)) {\n                                    this.form.controls[i].markAsTouched({ onlySelf: true });\n                                    this.form.controls[i].updateValueAndValidity();\n                            }\n                    }\n            }\n    }\n\n    acClick(field: any, event: any) {\n        // console.log(event);\n        // console.log(field.autocomplete);\n        if (typeof field.autocomplete !== 'undefined') {\n            if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n                field.autocomplete.forceSelect) {\n                field.autocomplete.selected = event.option.value;\n            }\n        }\n    }\n\n    acCheckBlur(field) {\n        // console.log(field.autocomplete.selected, this.form.controls[field.key].value);\n        if (typeof field.autocomplete !== 'undefined') {\n            if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n                field.autocomplete.forceSelect) {\n                if (!field.autocomplete.selected ||\n                    field.autocomplete.selected !== this.form.controls[field.key].value) {\n                    this.form.controls[field.key].setValue(null);\n                    field.autocomplete.selected = '';\n                }\n            }\n        }\n    }\n\n    submitForm(form: any) {\n            this.formSubmitEv.emit(form);\n    }\n\n    drawCustomErrors(prop, error) {\n        let ret = false;\n        if (typeof prop.validationMessages !== 'undefined') {\n            if (typeof prop.validationMessages[error] !== 'undefined') {\n                ret = prop.validationMessages[error] > '';\n            } else {\n                ret = false;\n            }\n        } else {\n            ret = false;\n        }\n        return ret;\n    }\n\n    private mapValidators(validators: any, field) {\n\n        const formValidators = [];\n\n        if (validators) {\n            for (const validation of Object.keys(validators)) {\n                if (validation === 'required') {\n                    formValidators.push(Validators.required);\n                } else if (validation === 'match') {\n                    formValidators.push(() => {\n                        let ret: any | boolean = false;\n                        const control = this.form.get(validators[validation]);\n                        if (!this.form.get(field)) {\n                            ret = null;\n                        }\n                        ret = !(this.form.get(field) && this.form.get(field).value === control.value);\n                        if (!ret) {\n                            ret = null;\n                        } else {\n                            ret = {\n                                match: true\n                            };\n                        }\n                        return ret;\n                    });\n                } else if (validation === 'min') {\n                    formValidators.push(Validators.min(validators[validation]));\n                } else if (validation === 'max') {\n                    formValidators.push(Validators.max(validators[validation]));\n                }\n            }\n        }\n\n        return formValidators;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { MatchValidator } from './prompt-dialog/match-validator.directive';\nimport { TWAConfirmDialogComponent } from './confirm-dialog/twa-confirm-dialog.component';\nimport { TWAPromptDialogComponent } from './prompt-dialog/twa-prompt-dialog.component';\n// import { TWADialogsService } from './twa-dialogs.service';\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    NgxMaterialTimepickerModule.forRoot(),\n  ],\n  declarations: [\n    // TWADialogsModule,\n    TWAConfirmDialogComponent,\n    TWAPromptDialogComponent,\n    MatchValidator,\n  ],\n  exports: [\n    // TWADialogsModule,\n    TWAConfirmDialogComponent,\n    TWAPromptDialogComponent\n  ],\n  entryComponents: [TWAConfirmDialogComponent, TWAPromptDialogComponent],\n  providers: [\n    TWADialogsModule,\n    TWAConfirmDialogComponent,\n    TWAPromptDialogComponent\n  ]\n})\n@Injectable()\nexport class TWADialogsModule {\n  constructor(\n      private dialog: MatDialog,\n      private _sanitizer: DomSanitizer\n    ) {}\n\n  public confirm(\n    title: string,\n    message: string,\n    okText?: string,\n    cancelText?: string\n  ): Observable<any> {\n    let dialogRef: MatDialogRef<TWAConfirmDialogComponent>;\n\n    dialogRef = this.dialog.open(TWAConfirmDialogComponent);\n\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.message = message;\n    dialogRef.componentInstance.messageHtml = this._sanitizer.bypassSecurityTrustHtml(message);\n    dialogRef.componentInstance.okText = okText || 'Aceptar';\n    dialogRef.componentInstance.cancelText = cancelText || '';\n\n    return dialogRef.afterClosed();\n  }\n\n  public prompt(\n    title: string,\n    message: string,\n    fields: any,\n    okText?: string,\n    cancelText?: string\n  ): Observable<any> {\n    let dialogRef: MatDialogRef<TWAPromptDialogComponent>;\n\n    dialogRef = this.dialog.open(TWAPromptDialogComponent);\n\n    dialogRef.componentInstance.title = title;\n    dialogRef.componentInstance.message = message;\n    dialogRef.componentInstance.messageHtml = this._sanitizer.bypassSecurityTrustHtml(message);\n    dialogRef.componentInstance.fields = fields;\n    dialogRef.componentInstance.okText = okText || 'Aceptar';\n    dialogRef.componentInstance.cancelText = cancelText || 'Cancelar';\n\n    // onSubmit = dialogRef.componentInstance.getFormSubmitEv().subscribe(item => {\n    //     dialogRef.componentInstance.result = item;\n    // });\n\n    return dialogRef.afterClosed();\n  }\n}\n"],"names":["Directive","NG_VALIDATORS","forwardRef","Attribute","Component","MatDialogRef","FormGroup","EventEmitter","FormControl","startWith","map","Validators","tslib_1.__values","NgModule","CommonModule","FlexLayoutModule","MatDialogModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatInputModule","MatCheckboxModule","MatSelectModule","MatRadioModule","MatDatepickerModule","MatNativeDateModule","MatAutocompleteModule","NgxMaterialTimepickerModule","Injectable","MatDialog","DomSanitizer"],"mappings":"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"}
