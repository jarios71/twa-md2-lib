{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://twa-md2-dynforms/lib/twa-md2-dynforms.service.ts","ng://twa-md2-dynforms/lib/twa-md2-dynforms.component.ts","ng://twa-md2-dynforms/lib/twa-md2-dynforms.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","TwaMd2DynformsService","Injectable","providedIn","TWAMd2DynformsComponent","this","form","FormGroup","formSubmitEv","EventEmitter","formData","FormData","isMultipart","submit","prototype","ngOnInit","ngOnChanges","createForm","formGroup","fields","hasOwnProperty","type","FormControl","mapValidators","validation","autocomplete","undefined","filteredOptions","getFormGroupEvent","_this","valueChanges","pipe","startWith","map","filterValue","_filterValues","options","slice","log","object","console","filteredValue","toLowerCase","filter","option","indexOf","getFormSubmitEv","send","updateValueAndValidity","status","controls","set","getAll","markAsTouched","onlySelf","acClick","field","event","forceSelect","selected","acCheckBlur","setValue","submitForm","emit","drawCustomErrors","prop","error","validationMessages","validators","formValidators","push","Validators","required","control","get","match","min","max","_b","keys","_c","addFiles","formElement","document","getElementById","click","changeFiles","id","files","name","append","JSON","stringify","Input","Output","Component","selector","template","TWAMd2DynformsModule","NgModule","declarations","imports","CommonModule","FlexLayoutModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatInputModule","MatCheckboxModule","MatSelectModule","MatRadioModule","MatIconModule","MatDatepickerModule","MatNativeDateModule","MatAutocompleteModule","NgxMaterialTimepickerModule","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TwaMd2DynformsService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, OnInit, OnChanges, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { map, startWith } from 'rxjs/operators';\n\nexport interface ITWAPromptField {\n  key: string;\n  label: string;\n  type: string;\n  fxFlex: string;\n  value: string;\n  options: any[];\n  autocomplete: any;\n  rows: any[];\n  validation: any;\n  validationMessages?: any;\n}\n\n@Component({\n  selector: 'twa-md2-dynforms',\n  template: `\n    <h2 *ngIf=\"title && title > ''\">{{ title }}</h2>\n    <p *ngIf=\"message && message > ''\" [innerHtml]=\"messageHtml\"></p>\n\n    <form novalidate (ngSubmit)=\"submitForm(form.value)\" [formGroup]=\"form\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n      <div *ngFor=\"let prop of fields\" fxFlex=\"{{(prop.fxFlex != 'false') ? ('calc(' + prop.fxFlex + ' - 10px)') : ((prop.fxFlex == 'false') ? '0 0 0' : '100%')}}\" fxLayout=\"column\">\n        <div [ngSwitch]=\"prop.type\" fxFlex=\"100%\">\n          <div *ngSwitchCase=\"'text'\">\n            <mat-form-field class=\"dynform-field-{{prop.key}}\" *ngIf=\"!prop.autocomplete\" fxFlex>\n              <input matInput placeholder=\"{{prop.label}}\"\n                [formControlName]=\"prop.key\"\n                [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n            </mat-form-field>\n            <div *ngIf=\"prop.autocomplete\" fxFlex>\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [matAutocomplete]=\"auto\"\n                  (blur)=\"acCheckBlur(prop)\"\n                  [id]=\"prop.key\" [type]=\"prop.type\">\n              </mat-form-field>\n              <mat-autocomplete #auto=\"matAutocomplete\"\n                (optionSelected)=\"acClick(prop, $event)\">\n                <mat-option *ngFor=\"let option of prop.autocomplete.filteredOptions | async\"\n                  [value]=\"option\">\n                {{ option }}\n                </mat-option>\n              </mat-autocomplete>\n            </div>\n          </div>\n            <div *ngSwitchCase=\"'password'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput type=\"password\" placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'textarea'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <textarea matInput placeholder=\"{{prop.label}}\" rows=\"{{prop.rows||'3'}}\" autosize\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\"></textarea>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'number'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\">\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'file'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input type=\"file\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\"\n                  [type]=\"prop.type\"\n                  style=\"display: none\"\n                  (change)=\"changeFiles($event)\" />\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key + 'Ctrl'\"\n                  [id]=\"prop.key + 'Ctrl'\" type=\"text\"\n                  (click)=\"addFiles(prop.key)\">\n                <mat-icon matSuffix (click)=\"addFiles(prop.key)\">folder</mat-icon>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'checkbox'\" class=\"dynform-field-{{prop.key}}\">\n              <mat-checkbox\n                [formControlName]=\"prop.key\"\n                [id]=\"prop.key\">\n                {{prop.label}}\n              </mat-checkbox>\n            </div>\n            <div *ngSwitchCase=\"'date'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput [matDatepicker]=picker placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\">\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'time'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput [ngxTimepicker]=\"tpicker\" placeholder=\"{{prop.label}}\"\n                  [format]=\"24\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\">\n                <ngx-material-timepicker #tpicker></ngx-material-timepicker>\n              </mat-form-field>\n            </div>\n\n            <div *ngSwitchCase=\"'radio'\" fxLayout=\"column\" class=\"dynform-field-{{prop.key}}\">\n              <div _ngcontent-c20=\"\" style=\"height: 20px;\">\n                <label _ngcontent-c20=\"\" style=\"transform: translateY(-1.28125em) scale(0.75)\n                    perspective(100px)\n                    translateZ(0.001px);\n                    -ms-transform: translateY(-1.28125em)\n                    scale(0.75);width: 133.33333333%;margin: 20px 0 0 0;font-weight: 100;color: #666;\">\n                  {{prop.label}}\n                </label>\n              </div>\n              <mat-radio-group [formControlName]=\"prop.key\" [name]=\"prop.key\" fxLayout=\"column\" style=\"margin-top: 14px;\">\n                <mat-radio-button [value]=\"option.value\" *ngFor=\"let option of prop.options\">\n                  {{option.label}}\n                </mat-radio-button>\n              </mat-radio-group>\n            </div>\n\n            <div *ngSwitchCase=\"'select'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <mat-select [formControlName]=\"prop.key\" placeholder=\"{{prop.label}}\">\n                  <mat-option *ngFor=\"let option of prop.options\" [value]=\"option.value\">\n                    {{ option.label }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n        </div>\n        <div class=\"error\" *ngIf=\"form.get(prop.key).errors\" fxFlex=\"100%\">\n        </div>\n        <div class=\"error\" *ngIf=\"form.get(prop.key).invalid && (form.get(prop.key).dirty || form.get(prop.key).touched)\" fxFlex=\"100%\">\n          <mat-error *ngIf=\"form.get(prop.key).errors.required\">\n            <div *ngIf=\"drawCustomErrors(prop, 'required')\">\n              {{prop.validationMessages.required}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.required\">\n              The field {{ prop.label }} is required.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.match\">\n            <div *ngIf=\"drawCustomErrors(prop, 'match')\">\n              {{prop.validationMessages.match}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.match\">\n              The fields doesn't match.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.min\">\n            <div *ngIf=\"drawCustomErrors(prop, 'min')\">\n              {{prop.validationMessages.min}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.min\">\n              The minimal value is {{form.get(prop.key).errors.min.min}}.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.max\">\n            <div *ngIf=\"drawCustomErrors(prop, 'max')\">\n              {{prop.validationMessages.max}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.max\">\n              The max value is {{form.get(prop.key).errors.max.max}}.\n            </div>\n          </mat-error>\n        </div>\n      </div>\n      <div fxFlex></div>\n    </form>\n\n    <!-- <button type=\"button\" mat-raised-button\n      (click)=\"send()\">{{ okText }}</button>\n    <button type=\"button\" mat-button\n      (click)=\"dialogRef.close(false)\">{{ cancelText }}</button> -->\n  `,\n  styles: []\n})\nexport class TWAMd2DynformsComponent implements OnInit, OnChanges {\n\n  data: any;\n\n  public form: FormGroup = new FormGroup({});\n  formSubmitEv: EventEmitter<any> = new EventEmitter();\n  public formData: FormData = new FormData();\n  public isMultipart = false;\n\n  public title: string;\n  public message: string;\n  public messageHtml: SafeHtml;\n\n  @Input()\n  public fields: ITWAPromptField[];\n\n  @Output()\n  public submit = this.formSubmitEv;\n\n  public okText: string;\n  public cancelText: string;\n  public onSubmit: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.createForm();\n  }\n\n  ngOnChanges() {\n    this.createForm();\n  }\n\n  createForm() {\n\n    const formGroup = {};\n    for (const i in this.fields) {\n        if (this.fields.hasOwnProperty(i)) {\n            if (this.fields[i].type !== 'file') {\n                formGroup[this.fields[i].key] = new FormControl(\n                    this.fields[i].value || '',\n                    this.mapValidators(this.fields[i].validation, this.fields[i].key)\n                );\n            } else {\n                formGroup[this.fields[i].key] = new FormControl(\n                    '',\n                    this.mapValidators(this.fields[i].validation, this.fields[i].key)\n                );\n            }\n            if (typeof this.fields[i].autocomplete !== 'undefined' && this.fields[i].autocomplete !== undefined) {\n                this.fields[i].autocomplete.filteredOptions = this.getFormGroupEvent(formGroup, i);\n            }\n            if (this.fields[i].type === 'file') {\n                this.isMultipart = true;\n                formGroup[this.fields[i].key + 'Ctrl'] = new FormControl(\n                    this.fields[i].value\n                );\n            }\n        }\n    }\n\n    this.form = new FormGroup(formGroup);\n\n  }\n\n  getFormGroupEvent(formGroup, i) {\n    return formGroup[this.fields[i].key].valueChanges.pipe(\n        startWith(''),\n        map(filterValue => filterValue ? this._filterValues(filterValue, this.fields[i].autocomplete.options) :\n            this.fields[i].autocomplete.options.slice())\n    );\n  }\n\n  log(object: any) {\n      console.log(object);\n  }\n\n  private _filterValues(value, options) {\n\n      const filteredValue = value.toLowerCase();\n\n      return options.filter(option => option.toLowerCase().indexOf(filteredValue) >= 0);\n\n  }\n\n  getFormSubmitEv() {\n          return this.formSubmitEv;\n  }\n\n  send() {\n    // let i;\n    this.form.updateValueAndValidity();\n    if (this.form.status !== 'INVALID') {\n      console.log(this.form.controls);\n      console.log(this.form.value);\n      if (this.isMultipart) {\n        const fields = this.fields;\n        for (const i in fields) {\n          if (fields[i].type !== 'file') {\n            this.formData.set(fields[i].key, this.form.value[fields[i].key]);\n            console.log(i, this.formData.getAll(fields[i].key));\n          } else {\n            console.log('file', i, this.formData.getAll(fields[i].key));\n          }\n        }\n        // this.dialogRef.close(this.formData);\n        // TODO: Emit results\n      } else {\n        // this.dialogRef.close(this.form.value);\n        // TODO: Emit results\n      }\n    } else {\n      for (const i in this.form.controls) {\n      // console.log(this.form.controls[i]);\n        if (this.form.controls.hasOwnProperty(i)) {\n          this.form.controls[i].markAsTouched({ onlySelf: true });\n          this.form.controls[i].updateValueAndValidity();\n        }\n      }\n    }\n  }\n\n  acClick(field: any, event: any) {\n      // console.log(event);\n      // console.log(field.autocomplete);\n      if (typeof field.autocomplete !== 'undefined') {\n          if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n              field.autocomplete.forceSelect) {\n              field.autocomplete.selected = event.option.value;\n          }\n      }\n  }\n\n  acCheckBlur(field) {\n      // console.log(field.autocomplete.selected, this.form.controls[field.key].value);\n      if (typeof field.autocomplete !== 'undefined') {\n          if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n              field.autocomplete.forceSelect) {\n              if (!field.autocomplete.selected ||\n                  field.autocomplete.selected !== this.form.controls[field.key].value) {\n                  this.form.controls[field.key].setValue(null);\n                  field.autocomplete.selected = '';\n              }\n          }\n      }\n  }\n\n  submitForm(form: any) {\n          this.formSubmitEv.emit(form);\n  }\n\n  drawCustomErrors(prop, error) {\n      let ret = false;\n      if (typeof prop.validationMessages !== 'undefined') {\n          if (typeof prop.validationMessages[error] !== 'undefined') {\n              ret = prop.validationMessages[error] > '';\n          } else {\n              ret = false;\n          }\n      } else {\n          ret = false;\n      }\n      return ret;\n  }\n\n  private mapValidators(validators: any, field) {\n\n      const formValidators = [];\n\n      if (validators) {\n          for (const validation of Object.keys(validators)) {\n              if (validation === 'required') {\n                  formValidators.push(Validators.required);\n              } else if (validation === 'match') {\n                  formValidators.push(() => {\n                      let ret: any | boolean = false;\n                      const control = this.form.get(validators[validation]);\n                      if (!this.form.get(field)) {\n                          ret = null;\n                      }\n                      ret = !(this.form.get(field) && this.form.get(field).value === control.value);\n                      if (!ret) {\n                          ret = null;\n                      } else {\n                          ret = {\n                              match: true\n                          };\n                      }\n                      return ret;\n                  });\n              } else if (validation === 'min') {\n                  formValidators.push(Validators.min(validators[validation]));\n              } else if (validation === 'max') {\n                  formValidators.push(Validators.max(validators[validation]));\n              }\n          }\n      }\n\n      return formValidators;\n  }\n\n  addFiles(formElement): void {\n\n      console.log(formElement, this.form.get(formElement));\n      const elem = document.getElementById(formElement) as HTMLInputElement;\n      elem.click();\n      // this.form.get(formElement).nativeElement.click();\n\n  }\n\n  changeFiles(formElement): void {\n\n      this.form.get(formElement.target.id + 'Ctrl').setValue(formElement.target.files[0].name);\n\n      // console.log(formElement);\n      // const formData = new FormData();\n      this.formData.append(formElement.target.id, formElement.target.files[0]);\n      console.log(JSON.stringify(this.formData));\n      console.log(this.formData);\n      // this.form.get(formElement.target.id).setValue(JSON.stringify(formData));\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n\nimport { TWAMd2DynformsComponent } from './twa-md2-dynforms.component';\n\n@NgModule({\n  declarations: [TWAMd2DynformsComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    NgxMaterialTimepickerModule,\n  ],\n  exports: [TWAMd2DynformsComponent],\n  entryComponents: [TWAMd2DynformsComponent],\n})\nexport class TWAMd2DynformsModule { }\n"]}