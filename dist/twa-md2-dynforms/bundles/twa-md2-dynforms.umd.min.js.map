{"version":3,"sources":["../../projects/twa-md2-dynforms/src/lib/twa-md2-dynforms.service.ts","../../../node_modules/tslib/tslib.es6.js","../../projects/twa-md2-dynforms/src/lib/twa-md2-dynforms.component.ts","../../projects/twa-md2-dynforms/src/lib/twa-md2-dynforms.module.ts"],"names":["Injectable","args","providedIn","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","TWAMd2DynformsComponent","this","form","FormGroup","formSubmitEv","EventEmitter","formData","FormData","isMultipart","submit","prototype","ngOnInit","ngOnChanges","createForm","formGroup","fields","hasOwnProperty","type","key","FormControl","mapValidators","validation","autocomplete","undefined","filteredOptions","getFormGroupEvent","_this","valueChanges","pipe","startWith","map","filterValue","_filterValues","options","slice","log","object","console","filteredValue","toLowerCase","filter","option","indexOf","getFormSubmitEv","send","updateValueAndValidity","status","controls","set","getAll","markAsTouched","onlySelf","acClick","field","event","forceSelect","selected","acCheckBlur","setValue","submitForm","emit","drawCustomErrors","prop","error","validationMessages","validators","formValidators","push","Validators","required","control","get","match","min","max","_b","keys","_c","addFiles","formElement","document","getElementById","click","changeFiles","target","id","files","name","append","JSON","stringify","Component","selector","template","Input","Output","NgModule","declarations","imports","CommonModule","FlexLayoutModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatInputModule","MatCheckboxModule","MatSelectModule","MatRadioModule","MatIconModule","MatDatepickerModule","MatNativeDateModule","MatAutocompleteModule","NgxMaterialTimepickerModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TwaMd2DynformsService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, EventEmitter, OnInit, OnChanges, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { map, startWith } from 'rxjs/operators';\n\nexport interface ITWAPromptField {\n  key: string;\n  label: string;\n  type: string;\n  fxFlex: string;\n  value: string;\n  options: any[];\n  autocomplete: any;\n  rows: any[];\n  validation: any;\n  validationMessages?: any;\n}\n\n@Component({\n  selector: 'twa-md2-dynforms',\n  template: `\n    <h2 *ngIf=\"title && title > ''\">{{ title }}</h2>\n    <p *ngIf=\"message && message > ''\" [innerHtml]=\"messageHtml\"></p>\n\n    <form novalidate (ngSubmit)=\"submitForm(form.value)\" [formGroup]=\"form\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n      <div *ngFor=\"let prop of fields\" fxFlex=\"{{(prop.fxFlex != 'false') ? ('calc(' + prop.fxFlex + ' - 10px)') : ((prop.fxFlex == 'false') ? '0 0 0' : '100%')}}\" fxLayout=\"column\">\n        <div [ngSwitch]=\"prop.type\" fxFlex=\"100%\">\n          <div *ngSwitchCase=\"'text'\">\n            <mat-form-field class=\"dynform-field-{{prop.key}}\" *ngIf=\"!prop.autocomplete\" fxFlex>\n              <input matInput placeholder=\"{{prop.label}}\"\n                [formControlName]=\"prop.key\"\n                [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n            </mat-form-field>\n            <div *ngIf=\"prop.autocomplete\" fxFlex>\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [matAutocomplete]=\"auto\"\n                  (blur)=\"acCheckBlur(prop)\"\n                  [id]=\"prop.key\" [type]=\"prop.type\">\n              </mat-form-field>\n              <mat-autocomplete #auto=\"matAutocomplete\"\n                (optionSelected)=\"acClick(prop, $event)\">\n                <mat-option *ngFor=\"let option of prop.autocomplete.filteredOptions | async\"\n                  [value]=\"option\">\n                {{ option }}\n                </mat-option>\n              </mat-autocomplete>\n            </div>\n          </div>\n            <div *ngSwitchCase=\"'password'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput type=\"password\" placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\" fxFlex>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'textarea'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <textarea matInput placeholder=\"{{prop.label}}\" rows=\"{{prop.rows||'3'}}\" autosize\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\"></textarea>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'number'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\" [type]=\"prop.type\">\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'file'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input type=\"file\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\"\n                  [type]=\"prop.type\"\n                  style=\"display: none\"\n                  (change)=\"changeFiles($event)\" />\n                <input matInput placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key + 'Ctrl'\"\n                  [id]=\"prop.key + 'Ctrl'\" type=\"text\"\n                  (click)=\"addFiles(prop.key)\">\n                <mat-icon matSuffix (click)=\"addFiles(prop.key)\">folder</mat-icon>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'checkbox'\" class=\"dynform-field-{{prop.key}}\">\n              <mat-checkbox\n                [formControlName]=\"prop.key\"\n                [id]=\"prop.key\">\n                {{prop.label}}\n              </mat-checkbox>\n            </div>\n            <div *ngSwitchCase=\"'date'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput [matDatepicker]=picker placeholder=\"{{prop.label}}\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\">\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              </mat-form-field>\n            </div>\n            <div *ngSwitchCase=\"'time'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <input matInput [ngxTimepicker]=\"tpicker\" placeholder=\"{{prop.label}}\"\n                  [format]=\"24\"\n                  [formControlName]=\"prop.key\"\n                  [id]=\"prop.key\">\n                <ngx-material-timepicker #tpicker></ngx-material-timepicker>\n              </mat-form-field>\n            </div>\n\n            <div *ngSwitchCase=\"'radio'\" fxLayout=\"column\" class=\"dynform-field-{{prop.key}}\">\n              <div _ngcontent-c20=\"\" style=\"height: 20px;\">\n                <label _ngcontent-c20=\"\" style=\"transform: translateY(-1.28125em) scale(0.75)\n                    perspective(100px)\n                    translateZ(0.001px);\n                    -ms-transform: translateY(-1.28125em)\n                    scale(0.75);width: 133.33333333%;margin: 20px 0 0 0;font-weight: 100;color: #666;\">\n                  {{prop.label}}\n                </label>\n              </div>\n              <mat-radio-group [formControlName]=\"prop.key\" [name]=\"prop.key\" fxLayout=\"column\" style=\"margin-top: 14px;\">\n                <mat-radio-button [value]=\"option.value\" *ngFor=\"let option of prop.options\">\n                  {{option.label}}\n                </mat-radio-button>\n              </mat-radio-group>\n            </div>\n\n            <div *ngSwitchCase=\"'select'\">\n              <mat-form-field class=\"dynform-field-{{prop.key}}\" fxFlex>\n                <mat-select [formControlName]=\"prop.key\" placeholder=\"{{prop.label}}\">\n                  <mat-option *ngFor=\"let option of prop.options\" [value]=\"option.value\">\n                    {{ option.label }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n        </div>\n        <div class=\"error\" *ngIf=\"form.get(prop.key).errors\" fxFlex=\"100%\">\n        </div>\n        <div class=\"error\" *ngIf=\"form.get(prop.key).invalid && (form.get(prop.key).dirty || form.get(prop.key).touched)\" fxFlex=\"100%\">\n          <mat-error *ngIf=\"form.get(prop.key).errors.required\">\n            <div *ngIf=\"drawCustomErrors(prop, 'required')\">\n              {{prop.validationMessages.required}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.required\">\n              The field {{ prop.label }} is required.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.match\">\n            <div *ngIf=\"drawCustomErrors(prop, 'match')\">\n              {{prop.validationMessages.match}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.match\">\n              The fields doesn't match.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.min\">\n            <div *ngIf=\"drawCustomErrors(prop, 'min')\">\n              {{prop.validationMessages.min}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.min\">\n              The minimal value is {{form.get(prop.key).errors.min.min}}.\n            </div>\n          </mat-error>\n          <mat-error *ngIf=\"form.get(prop.key).errors.max\">\n            <div *ngIf=\"drawCustomErrors(prop, 'max')\">\n              {{prop.validationMessages.max}}\n            </div>\n            <div *ngIf=\"!prop.validationMessages || !prop.validationMessages.max\">\n              The max value is {{form.get(prop.key).errors.max.max}}.\n            </div>\n          </mat-error>\n        </div>\n      </div>\n      <div fxFlex></div>\n    </form>\n\n    <!-- <button type=\"button\" mat-raised-button\n      (click)=\"send()\">{{ okText }}</button>\n    <button type=\"button\" mat-button\n      (click)=\"dialogRef.close(false)\">{{ cancelText }}</button> -->\n  `,\n  styles: []\n})\nexport class TWAMd2DynformsComponent implements OnInit, OnChanges {\n\n  data: any;\n\n  public form: FormGroup = new FormGroup({});\n  formSubmitEv: EventEmitter<any> = new EventEmitter();\n  public formData: FormData = new FormData();\n  public isMultipart = false;\n\n  public title: string;\n  public message: string;\n  public messageHtml: SafeHtml;\n\n  @Input()\n  public fields: ITWAPromptField[];\n\n  @Output()\n  public submit = this.formSubmitEv;\n\n  public okText: string;\n  public cancelText: string;\n  public onSubmit: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.createForm();\n  }\n\n  ngOnChanges() {\n    this.createForm();\n  }\n\n  createForm() {\n\n    const formGroup = {};\n    for (const i in this.fields) {\n        if (this.fields.hasOwnProperty(i)) {\n            if (this.fields[i].type !== 'file') {\n                formGroup[this.fields[i].key] = new FormControl(\n                    this.fields[i].value || '',\n                    this.mapValidators(this.fields[i].validation, this.fields[i].key)\n                );\n            } else {\n                formGroup[this.fields[i].key] = new FormControl(\n                    '',\n                    this.mapValidators(this.fields[i].validation, this.fields[i].key)\n                );\n            }\n            if (typeof this.fields[i].autocomplete !== 'undefined' && this.fields[i].autocomplete !== undefined) {\n                this.fields[i].autocomplete.filteredOptions = this.getFormGroupEvent(formGroup, i);\n            }\n            if (this.fields[i].type === 'file') {\n                this.isMultipart = true;\n                formGroup[this.fields[i].key + 'Ctrl'] = new FormControl(\n                    this.fields[i].value\n                );\n            }\n        }\n    }\n\n    this.form = new FormGroup(formGroup);\n\n  }\n\n  getFormGroupEvent(formGroup, i) {\n    return formGroup[this.fields[i].key].valueChanges.pipe(\n        startWith(''),\n        map(filterValue => filterValue ? this._filterValues(filterValue, this.fields[i].autocomplete.options) :\n            this.fields[i].autocomplete.options.slice())\n    );\n  }\n\n  log(object: any) {\n      console.log(object);\n  }\n\n  private _filterValues(value, options) {\n\n      const filteredValue = value.toLowerCase();\n\n      return options.filter(option => option.toLowerCase().indexOf(filteredValue) >= 0);\n\n  }\n\n  getFormSubmitEv() {\n          return this.formSubmitEv;\n  }\n\n  send() {\n    // let i;\n    this.form.updateValueAndValidity();\n    if (this.form.status !== 'INVALID') {\n      console.log(this.form.controls);\n      console.log(this.form.value);\n      if (this.isMultipart) {\n        const fields = this.fields;\n        for (const i in fields) {\n          if (fields[i].type !== 'file') {\n            this.formData.set(fields[i].key, this.form.value[fields[i].key]);\n            console.log(i, this.formData.getAll(fields[i].key));\n          } else {\n            console.log('file', i, this.formData.getAll(fields[i].key));\n          }\n        }\n        // this.dialogRef.close(this.formData);\n        // TODO: Emit results\n      } else {\n        // this.dialogRef.close(this.form.value);\n        // TODO: Emit results\n      }\n    } else {\n      for (const i in this.form.controls) {\n      // console.log(this.form.controls[i]);\n        if (this.form.controls.hasOwnProperty(i)) {\n          this.form.controls[i].markAsTouched({ onlySelf: true });\n          this.form.controls[i].updateValueAndValidity();\n        }\n      }\n    }\n  }\n\n  acClick(field: any, event: any) {\n      // console.log(event);\n      // console.log(field.autocomplete);\n      if (typeof field.autocomplete !== 'undefined') {\n          if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n              field.autocomplete.forceSelect) {\n              field.autocomplete.selected = event.option.value;\n          }\n      }\n  }\n\n  acCheckBlur(field) {\n      // console.log(field.autocomplete.selected, this.form.controls[field.key].value);\n      if (typeof field.autocomplete !== 'undefined') {\n          if (typeof field.autocomplete.forceSelect !== 'undefined' &&\n              field.autocomplete.forceSelect) {\n              if (!field.autocomplete.selected ||\n                  field.autocomplete.selected !== this.form.controls[field.key].value) {\n                  this.form.controls[field.key].setValue(null);\n                  field.autocomplete.selected = '';\n              }\n          }\n      }\n  }\n\n  submitForm(form: any) {\n          this.formSubmitEv.emit(form);\n  }\n\n  drawCustomErrors(prop, error) {\n      let ret = false;\n      if (typeof prop.validationMessages !== 'undefined') {\n          if (typeof prop.validationMessages[error] !== 'undefined') {\n              ret = prop.validationMessages[error] > '';\n          } else {\n              ret = false;\n          }\n      } else {\n          ret = false;\n      }\n      return ret;\n  }\n\n  private mapValidators(validators: any, field) {\n\n      const formValidators = [];\n\n      if (validators) {\n          for (const validation of Object.keys(validators)) {\n              if (validation === 'required') {\n                  formValidators.push(Validators.required);\n              } else if (validation === 'match') {\n                  formValidators.push(() => {\n                      let ret: any | boolean = false;\n                      const control = this.form.get(validators[validation]);\n                      if (!this.form.get(field)) {\n                          ret = null;\n                      }\n                      ret = !(this.form.get(field) && this.form.get(field).value === control.value);\n                      if (!ret) {\n                          ret = null;\n                      } else {\n                          ret = {\n                              match: true\n                          };\n                      }\n                      return ret;\n                  });\n              } else if (validation === 'min') {\n                  formValidators.push(Validators.min(validators[validation]));\n              } else if (validation === 'max') {\n                  formValidators.push(Validators.max(validators[validation]));\n              }\n          }\n      }\n\n      return formValidators;\n  }\n\n  addFiles(formElement): void {\n\n      console.log(formElement, this.form.get(formElement));\n      const elem = document.getElementById(formElement) as HTMLInputElement;\n      elem.click();\n      // this.form.get(formElement).nativeElement.click();\n\n  }\n\n  changeFiles(formElement): void {\n\n      this.form.get(formElement.target.id + 'Ctrl').setValue(formElement.target.files[0].name);\n\n      // console.log(formElement);\n      // const formData = new FormData();\n      this.formData.append(formElement.target.id, formElement.target.files[0]);\n      console.log(JSON.stringify(this.formData));\n      console.log(this.formData);\n      // this.form.get(formElement.target.id).setValue(JSON.stringify(formData));\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n\nimport { TWAMd2DynformsComponent } from './twa-md2-dynforms.component';\n\n@NgModule({\n  declarations: [TWAMd2DynformsComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatIconModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    NgxMaterialTimepickerModule,\n  ],\n  exports: [TWAMd2DynformsComponent],\n  // entryComponents: [TWAMd2DynformsComponent],\n})\nexport class TWAMd2DynformsModule { }\n"]}