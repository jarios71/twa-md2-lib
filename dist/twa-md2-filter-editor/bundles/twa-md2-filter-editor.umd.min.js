!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@angular/material/icon"),require("@angular/material/select"),require("@angular/material/chips"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/flex-layout"),require("@angular/material/tooltip"),require("@angular/material/menu"),require("@angular/cdk/drag-drop")):"function"==typeof define&&define.amd?define("twa-md2-filter-editor",["exports","@angular/core","@angular/common","@angular/forms","@angular/material/icon","@angular/material/select","@angular/material/chips","@angular/material/input","@angular/material/button","@angular/flex-layout","@angular/material/tooltip","@angular/material/menu","@angular/cdk/drag-drop"],e):e((t=t||self)["twa-md2-filter-editor"]={},t.ng.core,t.ng.common,t.ng.forms,t.ng.material.icon,t.ng.material.select,t.ng.material.chips,t.ng.material.input,t.ng.material.button,t.ng.flexLayout,t.ng.material.tooltip,t.ng.material.menu,t.ng.cdk.dragDrop)}(this,(function(t,e,i,n,r,o,l,a,s,c,u,f,d){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var p=function(){return(p=Object.assign||function(t){for(var e,i=1,n=arguments.length;i<n;i++)for(var r in e=arguments[i])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function h(t,e,i,n){var r,o=arguments.length,l=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,e,i,n);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(l=(o<3?r(l):o>3?r(e,i,l):r(e,i))||l);return o>3&&l&&Object.defineProperty(e,i,l),l}function g(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var m=function(){function t(){var t=this;this.processFilterOrs=function(e){var i=0,n=[];return e.forEach((function(e,r){if(r>0&&"||"===e.bitwise&&(i++,n.push([])),void 0===n[i]&&n.push([]),e.isgroup){var o=p(p({},e),{fields:t.processFilterOrs(e.fields)});n[i].push(o)}else n[i].push(e)})),n},this.filterData=function(e,i){var n={"=>":function(t,e){return t.includes(e)},"===":function(t,e){return t===e},">=":function(t,e){return t>=e},">":function(t,e){return t>e},"<=":function(t,e){return t<=e},"<":function(t,e){return t<e},in:function(t,e){return e.split(",").includes(t)}},r=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},o=!1;if(e.isgroup)o=t.filterGroup(e,i);else{t.prepareData&&t.prepareData(e,i);try{o="number"==typeof i[e.field]&&"=>"!==e.operation&&"in"!==e.operation?n[e.operation](+i[e.field],+e.value):r(i[e.field])&&r(e.value)||!("string"==typeof i[e.field]||i[e.field]instanceof String)?r(i[e.field])&&r(e.value)?n[e.operation](+i[e.field],+e.value):n[e.operation](i[e.field],e.value):n[e.operation](String(i[e.field]).toLowerCase(),String(e.value).toLowerCase())}catch(t){o=!1}}return o},this.filterGroup=function(e,i){for(var n=[],r=function(r,o){var l=[];e.fields[r].forEach((function(e){l.push(t.filterData(e,i))})),n.push(l.reduce((function(t,e){return e||(t=e),t}),!0))},o=0,l=e.fields.length;o<l;o++)r(o);return n.reduce((function(t,e){return e&&(t=e),t}),!1)}}return t.prototype.init=function(t,e,i){var n=this;this.filter=t,this.data=e,this.prepareData=i,this.filter.change.subscribe((function(t){n.filters=t,n.applyFilter()})),this.processedFilters=this.processFilterOrs(this.filter.activeFilters)},t.prototype.applyFilter=function(t){var e=this;void 0===t&&(t=this.data.slice());t.length;return this.filter?(this.processedFilters=this.processFilterOrs(this.filter.activeFilters),this.data=t,t=t.map((function(t,e){return t.realIndex=e,t})).filter((function(t){return e.applyFilterToRow(t)}))):t},t.prototype.applyFilterToRow=function(t){for(var e=this,i=[],n=function(n,o){var l=[];r.processedFilters[n].forEach((function(i){l.push(e.filterData(i,t))})),i.push(l.reduce((function(t,e){return e||(t=e),t}),!0))},r=this,o=0,l=this.processedFilters.length;o<l;o++)n(o);return!i.length||i.reduce((function(t,e){return e&&(t=e),t}),!1)},t=h([e.Injectable()],t)}(),v=function(){function t(){this.change=new e.EventEmitter,this.selectedField="none",this.selectedValue="",this.operation="contain",this.activeFilters=[],this.editing=!1,this.texts={filterBy:"Filter by...",filter:"filter",group:"Group",ungroup:"Ungroup",moveLeft:"Move to left",moveRight:"Move to right",openFilter:"Open saved filter",saveFilter:"Save filter",clearSelection:"Clear selection",clearAll:"Clear filters"},this.operations={contain:"=>",equal:"===",greaterEqual:">=",greater:">",lessEqual:"<=",less:"<",in:"in"},this.operationsData=[{type:"contain",label:"contains",operator:"=>"},{type:"equal",label:"equals",operator:"==="},{type:"greaterEqual",label:"greater or equal",operator:">="},{type:"greater",label:"greater",operator:">"},{type:"lessEqual",label:"less or equal",operator:"<="},{type:"less",label:"less",operator:"<"},{type:"in",label:"in",operator:"in"}],this.arrayMove=function(t,e,i){if(i>t.length)for(var n=i-t.length;n--;)t.push(void 0);return t.splice(i,0,t.splice(e,1)[0]),t}}return t.prototype.handleKeyboardEvent=function(t){this.editing&&13===t.keyCode&&this.addFilter()},t.prototype.openFilters=function(){var t=this,e=document.getElementById("openFiltersFile").files[0],i=new FileReader;i.onload=function(){var e=JSON.parse(i.result);t.activeFilters=e,t.change.emit(t.activeFilters)},i.readAsText(e)},t.prototype.saveFilters=function(){var t=new Blob([JSON.stringify(this.activeFilters)],{type:"text/json"}),e=document.createElement("a");e.href=window.URL.createObjectURL(t),e.download="filters.json",document.body.appendChild(e),e.click()},t.prototype.checkFilter=function(){return"none"===this.selectedField||""===this.selectedValue},t.prototype.sendFilter=function(){this.addFilter()},t.prototype.addFilter=function(){for(var t,e="",i="",n="",r="",o="",l=this.selectedField+" "+this.operations[this.operation]+" "+this.selectedValue,a=0,s=this.filterOptions.fields.length;a<s;a++)if(this.filterOptions.fields[a].name===this.selectedField){e=(t=this.filterOptions.fields[a]).color,i=t.field,n=t.dbfield,r=t.label,o=t.name;break}"in"===this.operation?l=this.selectedField+" "+this.operations[this.operation]+" (...)":"contain"===this.operation&&(l='"'+this.selectedValue+'" '+this.operations[this.operation]+" "+this.selectedField),this.activeFilters.push({color:e,explanation:l,label:r,name:o,field:i,dbfield:n,bitwise:"&&",operation:this.operations[this.operation],value:this.selectedValue}),this.selectedValue="",this.change.emit(this.activeFilters)},t.prototype.selectFilter=function(t){t.selected=!t.selected;var e=this.getParentFilter(t);if(e){for(var i=!0,n=0,r=e.fields.length;n<r;n++){var o=e.fields[n];o.isgroup||o.selected||(i=!1)}i&&(e.selected=!0)}},t.prototype.getParentFilter=function(t){for(var e=function(t,n){i=null;for(var r=0,o=t.fields.length;r<o;r++){var l=t.fields[r];if(JSON.stringify(l)===JSON.stringify(n))return t;l.isgroup&&(i=e(l,n))}return i},i=null,n=0,r=this.activeFilters.length;n<r;n++){var o=this.activeFilters[n];if(JSON.stringify(o)===JSON.stringify(t))return null;o.isgroup&&(i=e(o,t))}return i},t.prototype.moveTo=function(t){var e=-1,i=-1,n=-1;this.activeFilters.forEach((function(t,i){t.selected?e=i:t.isgroup&&t.fields.forEach((function(t,r){if(t.selected)return e=r,void(n=i)}))})),e>=0&&(n>=0?((i=e+t>=0?e+t:this.activeFilters[n].fields.length+t)>=this.activeFilters[n].fields.length&&(i=0),this.activeFilters[n].fields=this.arrayMove(this.activeFilters[n].fields,e,i)):((i=e+t>=0?e+t:this.activeFilters.length+t)>=this.activeFilters.length&&(i=0),this.activeFilters=this.arrayMove(this.activeFilters,e,i))),this.change.emit(this.activeFilters)},t.prototype.getSelected=function(){var t=function(e){return e.fields.reduce((function(e,i){return i.isgroup?e+=t(i):i.selected&&e++,e}),0)};return this.activeFilters.reduce((function(e,i){return i.isgroup?e+=t(i):i.selected&&e++,e}),0)},t.prototype.clearSelection=function(){var t=function(e){return e.fields.forEach((function(e){e.isgroup?e=t(e):e.selected=!1})),e};this.activeFilters=this.activeFilters.map((function(e){return e.isgroup&&(e=t(e)),e.selected=!1,e}))},t.prototype.changeBitwise=function(t,e){t.bitwise=e,this.change.emit(this.activeFilters)},t.prototype.groupSelected=function(){var t=function(e){var i=0;return e.isgroup?(e.fields.forEach((function(e){e.isgroup?i+=t(e):e.selected&&i++})),i):e.selected?1:void 0},e=this.activeFilters.filter((function(t){return t.isgroup})),i=0;return e.forEach((function(e){e.fields.forEach((function(e){e.isgroup?i+=t(e):e.selected&&i++}))})),i>0},t.prototype.entireGroupSelected=function(){for(var t=function(e){for(var i=!0,n=0,r=e.fields.length;n<r;n++){var o=e.fields[n];if(o.isgroup){if(i=t(o))return!0}else o.selected||(i=!1)}return i&&e.fields.length>0},e=this.activeFilters.filter((function(t){return t.isgroup})),i=!0,n=0,r=e.length;n<r;n++){for(var o=e[n],l=0,a=o.fields.length;l<a;l++){var s=o.fields[l];if(s.isgroup){if(i=t(s))return!0}else s.selected||(i=!1)}if(o.fields.forEach((function(t){})),i)return!0}return e.forEach((function(t){})),i&&e.length>0},t.prototype.createGroup=function(){var t,e=function(t){var i,n=t.fields.filter((function(t){return t.selected})),r=t.fields.findIndex((function(t){return t.selected}));n.length?(i=t.fields.filter((function(t){return!t.selected}))).splice(r,0,{color:"",name:"",field:"",isgroup:!0,bitwise:"&&",fields:n}):i=t.fields.map((function(t){return t.isgroup&&e(t),t})),t.fields=i},i=this.activeFilters.filter((function(t){return t.selected})),n=this.activeFilters.findIndex((function(t){return t.selected}));i.length?((t=this.activeFilters.filter((function(t){return!t.selected}))).splice(n,0,{color:"",name:"",field:"",isgroup:!0,bitwise:"&&",fields:i}),this.activeFilters=t):t=this.activeFilters.map((function(t){return t.isgroup&&e(t),t})),this.clearSelection(),this.change.emit(this.activeFilters)},t.prototype.sanitizeGroups=function(){var t=this,e=function(t,i){t.fields.map((function(i,n){i.isgroup&&(0===i.fields.length?t.fields.splice(n,1):1===i.fields.length?t.fields.splice(n,1,p({},i.fields[0])):e(i,t))}))};this.activeFilters.map((function(i,n){i.isgroup&&(0===i.fields.length?t.activeFilters.splice(n,1):1===i.fields.length?t.activeFilters.splice(n,1,p({},i.fields[0])):e(i))}))},t.prototype.removeFromGroup=function(){var t=function(e,i,n){e.fields.forEach((function(i,n){i.isgroup&&t(i,e,n)}));var r=e.fields.filter((function(t){return t.selected}));e.fields=e.fields.filter((function(t){return!t.selected})),r.forEach((function(t){t.selected=!1,i.fields.push(t)})),0===e.fields.length&&i.fields.splice(n,1)};this.activeFilters=this.activeFilters.reduce((function(e,i){if(i.isgroup){i.fields.forEach((function(e,n){e.isgroup&&t(e,i,n)}));var n=i.fields.filter((function(t){return t.selected}));i.fields=i.fields.filter((function(t){return!t.selected})),i.fields.length&&e.push(i),n.forEach((function(t){e.push(t)}))}else e.push(i);return e}),[]),this.clearSelection(),this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.onStartDragFilter=function(t,e){},t.prototype.onDroppedFilter=function(t){console.log("dropped"),this.arrayMove(this.activeFilters,t.previousIndex,t.currentIndex),console.log(this.activeFilters),this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.uploadSet=function(){var t=this,e=document.getElementById("fileSet").files[0],i=new FileReader;i.onload=function(){var e=i.result.split(/\r?\n/).filter((function(t){return t>""}));t.selectedValue=e.join(", "),t.fileSet.nativeElement.value=""},i.readAsText(e)},t.prototype.removeFilter=function(t){for(var e,i=this.getParentFilter(t),n=0,r=(e=i?i.fields:this.activeFilters).length;n<r;n++)if(JSON.stringify(e[n])===JSON.stringify(t)){e.splice(n,1);break}this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.clearFilters=function(){this.activeFilters=[],this.change.emit(this.activeFilters)},t.prototype.onFocus=function(t){this.editing=!0},t.prototype.onBlur=function(t){this.editing=!1},t.prototype.ngOnInit=function(){this.filterOptions=this.options,this.selectedField=void 0!==this.filterOptions.fields[0]?this.filterOptions.fields[0].name:"none",void 0!==typeof this.config&&(this.config&&void 0!==this.config.operationsData&&(this.operationsData=this.config.operationsData),this.config&&void 0!==this.config.filter&&(this.activeFilters=this.config.filter.slice()),this.config&&void 0!==this.config.texts&&(this.texts=p(p({},this.texts),this.config.texts)))},h([e.Input(),g("design:type",Object)],t.prototype,"options",void 0),h([e.Input(),g("design:type",Object)],t.prototype,"config",void 0),h([e.Output(),g("design:type",e.EventEmitter)],t.prototype,"change",void 0),h([e.ViewChild("fileSet",{static:!0}),g("design:type",e.ElementRef)],t.prototype,"fileSet",void 0),h([e.ViewChild("oepnFiltersFile",{static:!0}),g("design:type",e.ElementRef)],t.prototype,"openFiltersFile",void 0),h([e.HostListener("document:keydown",["$event"]),g("design:type",Function),g("design:paramtypes",[KeyboardEvent]),g("design:returntype",void 0)],t.prototype,"handleKeyboardEvent",null),t=h([e.Component({selector:"twa-md2-filter-editor",template:'<div fxLayout="column" style="width: 100%;">\n    <div class="selector" fxLayout="row" fxLayoutGap="10px">\n        <mat-form-field>\n            <mat-select [(ngModel)]="selectedField">\n                <mat-option selected value="none">{{texts.filterBy}}</mat-option>\n                <mat-option *ngFor="let field of filterOptions.fields" [(value)]="field.name">{{field.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select [(ngModel)]="operation">\n                <mat-option *ngFor="let op of operationsData" value="{{op.type}}">{{op.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder="{{texts.filter}}" [(ngModel)]="selectedValue"\n                    (focus)="onFocus($event)" (blur)="onBlur($event)" />\n            <button mat-button *ngIf="operation===\'in\'" matSuffix mat-icon-button aria-label="Clear" (click)="fileSet.click()">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </mat-form-field>\n        <div>\n            <button mat-button mat-icon-button (click)="sendFilter()" [disabled]="checkFilter()">\n                <mat-icon>send</mat-icon>\n            </button>\n        </div>\n        <div fxFlex></div>\n        <button mat-button mat-icon-button\n                *ngIf="activeFilters.length === 0"\n                matTooltip="{{texts.openFilter}}"\n                (click)="openFiltersFile.click()">\n            <mat-icon>folder_open</mat-icon>\n        </button>\n        <div class="tools" *ngIf="activeFilters.length > 0" fxLayout="row">\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.group}}"\n                    (click)="createGroup()"\n                    [disabled]="getSelected() < 2">\n                <mat-icon>link</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.ungroup}}"\n                    (click)="removeFromGroup()"\n                    [disabled]="!groupSelected()">\n                <mat-icon>link_off</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.moveLeft}}"\n                    (click)="moveTo(-1)"\n                    [disabled]="getSelected() !== 1 && !entireGroupSelected()">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.moveRight}}"\n                    (click)="moveTo(1)"\n                    [disabled]="getSelected() !== 1 && !entireGroupSelected()">\n                <mat-icon>arrow_forward</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.openFilter}}"\n                    (click)="openFiltersFile.click()">\n                <mat-icon>folder_open</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.saveFilter}}"\n                    [disabled]="getSelected() > 1"\n                    (click)="saveFilters()">\n                <mat-icon>save</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.clearSelection}}"\n                    [disabled]="getSelected() < 1"\n                    (click)="clearSelection()">\n                <mat-icon>clear</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.clearAll}}"\n                    [disabled]="activeFilters.length < 1"\n                    (click)="clearFilters()">\n                <mat-icon>clear_all</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div class="filter" fxLayoutGap="12">\n        <mat-chip-list cdkDropList\n                        cdkDropListOrientation="horizontal"\n                        #filterList="cdkDropList"\n                        (cdkDropListDropped)="onDroppedFilter($event)">\n            \x3c!-- <ng-container *ngFor="let filter of activeFilters; let idx = index"> --\x3e\n                <div fxLayout="row"\n                *ngFor="let filter of activeFilters; let idx = index"\n                cdkDrag\n                (cdkDragStarted)="onStartDragFilter($event, filter)" [ngClass]="{\'cgroup\': filter.isgroup}">\n                    <button mat-button *ngIf="idx > 0" [matMenuTriggerFor]="menu" class="bitwise">{{filter.bitwise}}</button>\n                    <mat-menu #menu="matMenu">\n                        <button mat-menu-item (click)="changeBitwise(filter, \'&&\')">&&</button>\n                        <button mat-menu-item (click)="changeBitwise(filter, \'||\')">||</button>\n                    </mat-menu>\n                    <mat-chip color="{{filter.color}}" selected="true"\n                                id="filter-{{idx}}"\n                                [removable]="true" (removed)="removeFilter(filter)"\n                                [matTooltip]="filter.value"\n                                [matTooltipDisabled]="filter.operation!==\'in\'"\n                                matTooltipShowDelay="1500"\n                                (click)="selectFilter(filter)"\n                                *ngIf="!filter.isgroup"\n                                [ngClass]="{\'selected\': filter.selected, \'mat-accent\': filter.selected}">\n                        {{filter.explanation}}\n                        <mat-icon matChipRemove>cancel</mat-icon>\n                    </mat-chip>\n                    <div *ngIf="filter.isgroup" fxLayout="row">\n                        <div *ngTemplateOutlet="group; context: { filter: this.filter, idx: this.idx}" fxLayout="row">\n                        </div>\n                    </div>\n                </div>\n            \x3c!-- </ng-container> --\x3e\n        </mat-chip-list>\n    </div>\n</div>\n<input style="visibility: hidden; height: 0px; width: 0px;" type="file" id="fileSet" #fileSet (change)="uploadSet()" />\n<input style="visibility: hidden; height: 0px; width: 0px;" type="file" id="openFiltersFile" #openFiltersFile (change)="openFilters()" />\n<ng-template #group let-filter="filter" let-idx="idx">\n    <span class="group-start">(</span>\n    <ng-container *ngFor="let filter2 of filter.fields; let idx2 = index">\n        <button mat-button *ngIf="idx2 > 0" [matMenuTriggerFor]="menu2"\n                class="bitwise">\n            {{filter2.bitwise}}\n        </button>\n        <mat-menu #menu2="matMenu">\n            <button mat-menu-item (click)="changeBitwise(filter2, \'&&\')">&&</button>\n            <button mat-menu-item (click)="changeBitwise(filter2, \'||\')">||</button>\n        </mat-menu>\n        <div>\n            <mat-chip color="{{filter.color}}" selected="true"\n                id="filter-{{idx}}-{{idx2}}"\n                [removable]="true" (removed)="removeFilter(filter2)"\n                [matTooltip]="filter2.value"\n                [matTooltipDisabled]="filter.operation!==\'in\'"\n                matTooltipShowDelay="1500"\n                (click)="selectFilter(filter2)"\n                [ngClass]="{\'selected\': filter2.selected, \'mat-accent\': filter2.selected}"\n                *ngIf="!filter2.isgroup"\n            >{{filter2.explanation}}\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <div *ngIf="filter2.isgroup" fxLayout="row">\n                <div *ngTemplateOutlet="group; context: { filter: this.filter2, idx: this.idx2}">\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <span class="group-end">)</span>\n</ng-template>\n',styles:["\n    .error { color: red; }\n    .selector {\n        width: 100%;\n    }\n    .filter {\n        padding-bottom: 12px;\n    }\n    .filter mat-chip {\n        margin: 4px;\n    }\n    .cgroup {\n        display: flex;\n    }\n    mat-chip.selected {\n        color: #fff;\n        font-weight: bold;\n    }\n    span.group-start,\n    span.group-end {\n        font-size: 25px;\n    }\n    button.bitwise {\n        min-width: 24px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n    "]}),g("design:paramtypes",[])],t)}(),F=function(){function t(){}return t=h([e.NgModule({imports:[i.CommonModule,n.FormsModule,n.ReactiveFormsModule,r.MatIconModule,o.MatSelectModule,l.MatChipsModule,a.MatInputModule,s.MatButtonModule,c.FlexLayoutModule,u.MatTooltipModule,f.MatMenuModule,d.DragDropModule],declarations:[v],exports:[v],providers:[m]})],t)}();t.TWAFilterEditorComponent=v,t.TWAFilterEditorModule=F,t.TWAFilterEditorService=m,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=twa-md2-filter-editor.umd.min.js.map