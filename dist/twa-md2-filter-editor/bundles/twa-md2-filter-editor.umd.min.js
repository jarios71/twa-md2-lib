!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@angular/material/icon"),require("@angular/material/select"),require("@angular/material/chips"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/flex-layout"),require("@angular/material/tooltip"),require("@angular/material/menu"),require("@angular/cdk/drag-drop")):"function"==typeof define&&define.amd?define("twa-md2-filter-editor",["exports","@angular/core","@angular/common","@angular/forms","@angular/material/icon","@angular/material/select","@angular/material/chips","@angular/material/input","@angular/material/button","@angular/flex-layout","@angular/material/tooltip","@angular/material/menu","@angular/cdk/drag-drop"],e):e(t["twa-md2-filter-editor"]={},t.ng.core,t.ng.common,t.ng.forms,t.ng.material.icon,t.ng.material.select,t.ng.material.chips,t.ng.material.input,t.ng.material.button,t.ng["flex-layout"],t.ng.material.tooltip,t.ng.material.menu,t.ng.cdk["drag-drop"])}(this,function(t,e,i,n,r,o,l,a,s,c,u,f,d){"use strict";var p=function(){return t=Object.assign||function t(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var r in t=arguments[i])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},t.apply(this,arguments)},h=function(){function t(){var l=this;this.processFilterOrs=function(t){var n=0,r=[];return t.forEach(function(t,e){if(0<e&&"||"===t.bitwise&&(n++,r.push([])),"undefined"==typeof r[n]&&r.push([]),t.isgroup){var i=p({},t,{fields:l.processFilterOrs(t.fields)});r[n].push(i)}else r[n].push(t)}),r},this.filterData=function(t,e){var i={"=>":function(t,e){return t.includes(e)},"===":function(t,e){return t===e},">=":function(t,e){return e<=t},">":function(t,e){return e<t},"<=":function(t,e){return t<=e},"<":function(t,e){return t<e},"in":function(t,e){return e.split(",").includes(t)}},n=!1;if(t.isgroup)n=l.filterGroup(t,e);else{l.prepareData&&l.prepareData(t,e);try{n="number"==typeof e[t.field]&&"=>"!==t.operation&&"in"!==t.operation?i[t.operation](+e[t.field],+t.value):i[t.operation](String(e[t.field]).toLowerCase(),String(t.value).toLowerCase())}catch(r){n=!1}}return n},this.filterGroup=function(n,r){for(var o=[],t=function(t,e){var i=[];n.fields[t].forEach(function(t){i.push(l.filterData(t,r))}),o.push(i.reduce(function(t,e){return e||(t=e),t},!0))},e=0,i=n.fields.length;e<i;e++)t(e);return o.reduce(function(t,e){return e&&(t=e),t},!1)}}return t.prototype.init=function(t,e,i){var n=this;this.filter=t,this.data=e,this.prepareData=i,this.filter.change.subscribe(function(t){n.filters=t,n.applyFilter()}),this.processedFilters=this.processFilterOrs(this.filter.activeFilters)},t.prototype.applyFilter=function(t){var e=this;void 0===t&&(t=this.data.slice());t.length;return this.filter?(this.processedFilters=this.processFilterOrs(this.filter.activeFilters),t=(this.data=t).map(function(t,e){return t.realIndex=e,t}).filter(function(t){return e.applyFilterToRow(t)})):t},t.prototype.applyFilterToRow=function(n){for(var r=this,o=[],t=function(t,e){var i=[];l.processedFilters[t].forEach(function(t){i.push(r.filterData(t,n))}),o.push(i.reduce(function(t,e){return e||(t=e),t},!0))},l=this,e=0,i=this.processedFilters.length;e<i;e++)t(e);return!o.length||o.reduce(function(t,e){return e&&(t=e),t},!1)},t.decorators=[{type:e.Injectable}],t}(),m=function(){function t(){this.change=new e.EventEmitter,this.selectedField="none",this.selectedValue="",this.operation="contain",this.activeFilters=[],this.editing=!1,this.texts={filterBy:"Filter by...",filter:"filter",group:"Group",ungroup:"Ungroup",moveLeft:"Move to left",moveRight:"Move to right",openFilter:"Open saved filter",saveFilter:"Save filter",clearSelection:"Clear selection",clearAll:"Clear filters"},this.operations={contain:"=>",equal:"===",greaterEqual:">=",greater:">",lessEqual:"<=",less:"<","in":"in"},this.operationsData=[{type:"contain",label:"contains",operator:"=>"},{type:"equal",label:"equals",operator:"==="},{type:"greaterEqual",label:"greater or equal",operator:">="},{type:"greater",label:"greater",operator:">"},{type:"lessEqual",label:"less or equal",operator:"<="},{type:"less",label:"less",operator:"<"},{type:"in",label:"in",operator:"in"}],this.arrayMove=function(t,e,i){if(i>t.length)for(var n=i-t.length;n--;)t.push(undefined);return t.splice(i,0,t.splice(e,1)[0]),t}}return t.prototype.handleKeyboardEvent=function(t){"c"===t.key&&t.ctrlKey?this.clearFilters():this.editing&&13===t.keyCode&&this.addFilter()},t.prototype.openFilters=function(){var e=this,t=document.getElementById("openFiltersFile").files[0],i=new FileReader;i.onload=function(){console.log(i.result);var t=JSON.parse(i.result);e.activeFilters=t},i.readAsText(t)},t.prototype.saveFilters=function(){var t=new Blob([JSON.stringify(this.activeFilters)],{type:"text/json"}),e=document.createElement("a");e.href=window.URL.createObjectURL(t),e.download="filters.json",document.body.appendChild(e),e.click()},t.prototype.checkFilter=function(){return"none"===this.selectedField||""===this.selectedValue},t.prototype.addFilter=function(){for(var t,e="",i="",n="",r="",o="",l=this.selectedField+" "+this.operations[this.operation]+" "+this.selectedValue,a=0,s=this.filterOptions.fields.length;a<s;a++)if(this.filterOptions.fields[a].name===this.selectedField){e=(t=this.filterOptions.fields[a]).color,i=t.field,n=t.dbfield,r=t.label,o=t.name;break}"in"===this.operation?l=this.selectedField+" "+this.operations[this.operation]+" (...)":"contain"===this.operation&&(l='"'+this.selectedValue+'" '+this.operations[this.operation]+" "+this.selectedField),this.activeFilters.push({color:e,explanation:l,label:r,name:o,field:i,dbfield:n,bitwise:"&&",operation:this.operations[this.operation],value:this.selectedValue}),this.selectedValue="",this.change.emit(this.activeFilters)},t.prototype.selectFilter=function(t){t.selected=!t.selected;var e=this.getParentFilter(t);if(e){for(var i=!0,n=0,r=e.fields.length;n<r;n++){var o=e.fields[n];o.isgroup||o.selected||(i=!1)}i&&(e.selected=!0)}},t.prototype.getParentFilter=function(t){for(var o=function(t,e){l=null;for(var i=0,n=t.fields.length;i<n;i++){var r=t.fields[i];if(JSON.stringify(r)===JSON.stringify(e))return t;r.isgroup&&(l=o(r,e))}return l},l=null,e=0,i=this.activeFilters.length;e<i;e++){var n=this.activeFilters[e];if(JSON.stringify(n)===JSON.stringify(t))return null;n.isgroup&&(l=o(n,t))}return l},t.prototype.moveTo=function(t){var n=-1,e=-1,r=-1;this.activeFilters.forEach(function(t,i){t.selected?n=i:t.isgroup&&t.fields.forEach(function(t,e){if(t.selected)return n=e,void(r=i)})}),0<=n&&(0<=r?((e=0<=n+t?n+t:this.activeFilters[r].fields.length+t)>=this.activeFilters[r].fields.length&&(e=0),this.activeFilters[r].fields=this.arrayMove(this.activeFilters[r].fields,n,e)):((e=0<=n+t?n+t:this.activeFilters.length+t)>=this.activeFilters.length&&(e=0),this.activeFilters=this.arrayMove(this.activeFilters,n,e))),this.change.emit(this.activeFilters)},t.prototype.getSelected=function(){var i=function(t){return t.fields.reduce(function(t,e){return e.isgroup?t+=i(e):e.selected&&t++,t},0)};return this.activeFilters.reduce(function(t,e){return e.isgroup?t+=i(e):e.selected&&t++,t},0)},t.prototype.clearSelection=function(){var e=function(t){return t.fields.forEach(function(t){t.isgroup?t=e(t):t.selected=!1}),t};this.activeFilters=this.activeFilters.map(function(t){return t.isgroup&&(t=e(t)),t.selected=!1,t})},t.prototype.changeBitwise=function(t,e){t.bitwise=e,this.change.emit(this.activeFilters)},t.prototype.groupSelected=function(){var i=function(t){var e=0;return t.isgroup?(t.fields.forEach(function(t){t.isgroup?e+=i(t):t.selected&&e++}),e):t.selected?1:void 0},t=this.activeFilters.filter(function(t){return t.isgroup}),e=0;return t.forEach(function(t){t.fields.forEach(function(t){t.isgroup?e+=i(t):t.selected&&e++})}),0<e},t.prototype.entireGroupSelected=function(){for(var o=function(t){for(var e=!0,i=0,n=t.fields.length;i<n;i++){var r=t.fields[i];if(r.isgroup){if(e=o(r))return!0}else r.selected||(e=!1)}return e&&0<t.fields.length},t=this.activeFilters.filter(function(t){return t.isgroup}),e=!0,i=0,n=t.length;i<n;i++){for(var r=t[i],l=0,a=r.fields.length;l<a;l++){var s=r.fields[l];if(s.isgroup){if(e=o(s))return!0}else s.selected||(e=!1)}if(r.fields.forEach(function(t){}),e)return!0}return t.forEach(function(t){}),e&&0<t.length},t.prototype.createGroup=function(){var t,r=function(t){var e,i=t.fields.filter(function(t){return t.selected}),n=t.fields.findIndex(function(t){return t.selected});i.length?(e=t.fields.filter(function(t){return!t.selected})).splice(n,0,{color:"",name:"",field:"",isgroup:!0,bitwise:"&&",fields:i}):e=t.fields.map(function(t){return t.isgroup&&r(t),t}),t.fields=e},e=this.activeFilters.filter(function(t){return t.selected}),i=this.activeFilters.findIndex(function(t){return t.selected});e.length?((t=this.activeFilters.filter(function(t){return!t.selected})).splice(i,0,{color:"",name:"",field:"",isgroup:!0,bitwise:"&&",fields:e}),this.activeFilters=t):t=this.activeFilters.map(function(t){return t.isgroup&&r(t),t}),this.clearSelection(),this.change.emit(this.activeFilters)},t.prototype.sanitizeGroups=function(){var i=this,n=function(i,t){i.fields.map(function(t,e){t.isgroup&&(0===t.fields.length?i.fields.splice(e,1):1===t.fields.length?i.fields.splice(e,1,p({},t.fields[0])):n(t,i))})};this.activeFilters.map(function(t,e){t.isgroup&&(0===t.fields.length?i.activeFilters.splice(e,1):1===t.fields.length?i.activeFilters.splice(e,1,p({},t.fields[0])):n(t))})},t.prototype.removeFromGroup=function(){var r=function(i,e,t){i.fields.forEach(function(t,e){t.isgroup&&r(t,i,e)});var n=i.fields.filter(function(t){return t.selected});i.fields=i.fields.filter(function(t){return!t.selected}),n.forEach(function(t){t.selected=!1,e.fields.push(t)}),0===i.fields.length&&e.fields.splice(t,1)};this.activeFilters=this.activeFilters.reduce(function(e,i){if(i.isgroup){i.fields.forEach(function(t,e){t.isgroup&&r(t,i,e)});var t=i.fields.filter(function(t){return t.selected});i.fields=i.fields.filter(function(t){return!t.selected}),i.fields.length&&e.push(i),t.forEach(function(t){e.push(t)})}else e.push(i);return e},[]),this.clearSelection(),this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.onStartDragFilter=function(t,e){},t.prototype.onDroppedFilter=function(t){this.arrayMove(this.activeFilters,t.previousIndex,t.currentIndex),this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.uploadSet=function(){var e=this,t=document.getElementById("fileSet").files[0],i=new FileReader;i.onload=function(){var t=i.result.split(/\r?\n/).filter(function(t){return""<t});e.selectedValue=t.join(", "),e.fileSet.nativeElement.value=""},i.readAsText(t)},t.prototype.removeFilter=function(t){for(var e,i=this.getParentFilter(t),n=0,r=(e=i?i.fields:this.activeFilters).length;n<r;n++)if(JSON.stringify(e[n])===JSON.stringify(t)){e.splice(n,1);break}this.sanitizeGroups(),this.change.emit(this.activeFilters)},t.prototype.clearFilters=function(){this.activeFilters=[],this.change.emit(this.activeFilters)},t.prototype.onFocus=function(t){this.editing=!0},t.prototype.onBlur=function(t){this.editing=!1},t.prototype.ngOnInit=function(){this.filterOptions=this.options,this.selectedField="undefined"!=typeof this.filterOptions.fields[0]?this.filterOptions.fields[0].name:"none",typeof this.config!==undefined&&(this.config&&"undefined"!=typeof this.config.operationsData&&(this.operationsData=this.config.operationsData),this.config&&"undefined"!=typeof this.config.filter&&(this.activeFilters=this.config.filter.slice()),this.config&&"undefined"!=typeof this.config.texts&&(this.texts=p({},this.texts,this.config.texts)))},t.decorators=[{type:e.Component,args:[{selector:"twa-md2-filter-editor",template:'<div fxLayout="column" style="width: 100%;">\n    <div class="selector" fxLayout="row" fxLayoutGap="10px">\n        <mat-form-field>\n            <mat-select [(ngModel)]="selectedField">\n                <mat-option selected value="none">{{texts.filterBy}}</mat-option>\n                <mat-option *ngFor="let field of filterOptions.fields" [(value)]="field.name">{{field.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select [(ngModel)]="operation">\n                <mat-option *ngFor="let op of operationsData" value="{{op.type}}">{{op.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder="{{texts.filter}}" [(ngModel)]="selectedValue"\n                    (focus)="onFocus($event)" (blur)="onBlur($event)" />\n            <button mat-button *ngIf="operation===\'in\'" matSuffix mat-icon-button aria-label="Clear" (click)="fileSet.click()">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </mat-form-field>\n        <div>\n            <button mat-button mat-icon-button (click)="addFilter()" [disabled]="checkFilter()">\n                <mat-icon>send</mat-icon>\n            </button>\n        </div>\n        <div fxFlex></div>\n        <button mat-button mat-icon-button\n                *ngIf="activeFilters.length === 0"\n                matTooltip="{{texts.openFilter}}"\n                (click)="openFiltersFile.click()">\n            <mat-icon>folder_open</mat-icon>\n        </button>\n        <div class="tools" *ngIf="activeFilters.length > 0" fxLayout="row">\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.group}}"\n                    (click)="createGroup()"\n                    [disabled]="getSelected() < 2">\n                <mat-icon>link</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.ungroup}}"\n                    (click)="removeFromGroup()"\n                    [disabled]="!groupSelected()">\n                <mat-icon>link_off</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.moveLeft}}"\n                    (click)="moveTo(-1)"\n                    [disabled]="getSelected() !== 1 && !entireGroupSelected()">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.moveRight}}"\n                    (click)="moveTo(1)"\n                    [disabled]="getSelected() !== 1 && !entireGroupSelected()">\n                <mat-icon>arrow_forward</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.openFilter}}"\n                    (click)="openFiltersFile.click()">\n                <mat-icon>folder_open</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.saveFilter}}"\n                    [disabled]="getSelected() > 1"\n                    (click)="saveFilters()">\n                <mat-icon>save</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.clearSelection}}"\n                    [disabled]="getSelected() < 1"\n                    (click)="clearSelection()">\n                <mat-icon>clear</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip="{{texts.clearAll}}"\n                    [disabled]="activeFilters.length < 1"\n                    (click)="clearFilters()">\n                <mat-icon>clear_all</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div class="filter" fxLayoutGap="12">\n        <mat-chip-list cdkDropList\n                        cdkDropListOrientation="horizontal"\n                        (cdkDropListDropped)="onDroppedFilter($event)">\n            <ng-container *ngFor="let filter of activeFilters; let idx = index">\n                <div fxLayout="row"\n                cdkDrag\n                (cdkDragStarted)="onStartDragFilter($event, filter)" [ngClass]="{\'cgroup\': filter.isgroup}">\n                    <button mat-button *ngIf="idx > 0" [matMenuTriggerFor]="menu" class="bitwise">{{filter.bitwise}}</button>\n                    <mat-menu #menu="matMenu">\n                        <button mat-menu-item (click)="changeBitwise(filter, \'&&\')">&&</button>\n                        <button mat-menu-item (click)="changeBitwise(filter, \'||\')">||</button>\n                    </mat-menu>\n                    <mat-chip color="{{filter.color}}" selected="true"\n                                id="filter-{{idx}}"\n                                [removable]="true" (removed)="removeFilter(filter)"\n                                [matTooltip]="filter.value"\n                                [matTooltipDisabled]="filter.operation!==\'in\'"\n                                matTooltipShowDelay="1500"\n                                (click)="selectFilter(filter)"\n                                *ngIf="!filter.isgroup"\n                                [ngClass]="{\'selected\': filter.selected, \'mat-accent\': filter.selected}">\n                        {{filter.explanation}}\n                        <mat-icon matChipRemove>cancel</mat-icon>\n                    </mat-chip>\n                    <div *ngIf="filter.isgroup" fxLayout="row">\n                        <div *ngTemplateOutlet="group; context: { filter: this.filter, idx: this.idx}" fxLayout="row">\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </mat-chip-list>\n    </div>\n</div>\n<input style="visibilty: hidden; height: 0px; width: 0px;" type="file" id="fileSet" #fileSet (change)="uploadSet()" />\n<input style="visibilty: hidden; height: 0px; width: 0px;" type="file" id="openFiltersFile" #openFiltersFile (change)="openFilters()" />\n<ng-template #group let-filter="filter" let-idx="idx">\n    <span class="group-start">(</span>\n    <ng-container *ngFor="let filter2 of filter.fields; let idx2 = index">\n        <button mat-button *ngIf="idx2 > 0" [matMenuTriggerFor]="menu2"\n                class="bitwise">\n            {{filter2.bitwise}}\n        </button>\n        <mat-menu #menu2="matMenu">\n            <button mat-menu-item (click)="changeBitwise(filter2, \'&&\')">&&</button>\n            <button mat-menu-item (click)="changeBitwise(filter2, \'||\')">||</button>\n        </mat-menu>\n        <div>\n            <mat-chip color="{{filter.color}}" selected="true"\n                id="filter-{{idx}}-{{idx2}}"\n                [removable]="true" (removed)="removeFilter(filter2)"\n                [matTooltip]="filter2.value"\n                [matTooltipDisabled]="filter.operation!==\'in\'"\n                matTooltipShowDelay="1500"\n                (click)="selectFilter(filter2)"\n                [ngClass]="{\'selected\': filter2.selected, \'mat-accent\': filter2.selected}"\n                *ngIf="!filter2.isgroup"\n            >{{filter2.explanation}}\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <div *ngIf="filter2.isgroup" fxLayout="row">\n                <div *ngTemplateOutlet="group; context: { filter: this.filter2, idx: this.idx2}">\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <span class="group-end">)</span>\n</ng-template>\n',styles:["\n    .error { color: red; }\n    .selector {\n        width: 100%;\n    }\n    .filter {\n        padding-bottom: 12px;\n    }\n    .filter mat-chip {\n        margin: 4px;\n    }\n    .cgroup {\n        display: flex;\n    }\n    mat-chip.selected {\n        color: #fff;\n        font-weight: bold;\n    }\n    span.group-start,\n    span.group-end {\n        font-size: 25px;\n    }\n    button.bitwise {\n        min-width: 24px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n    "]}]}],t.ctorParameters=function(){return[]},t.propDecorators={options:[{type:e.Input}],config:[{type:e.Input}],change:[{type:e.Output}],fileSet:[{type:e.ViewChild,args:["fileSet"]}],openFiltersFile:[{type:e.ViewChild,args:["oepnFiltersFile"]}],handleKeyboardEvent:[{type:e.HostListener,args:["document:keydown",["$event"]]}]},t}(),g=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,n.FormsModule,n.ReactiveFormsModule,r.MatIconModule,o.MatSelectModule,l.MatChipsModule,a.MatInputModule,s.MatButtonModule,c.FlexLayoutModule,u.MatTooltipModule,f.MatMenuModule,d.DragDropModule],declarations:[m],exports:[m],providers:[h]}]}],t}();t.TWAFilterEditorService=h,t.TWAFilterEditorComponent=m,t.TWAFilterEditorModule=g,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=twa-md2-filter-editor.umd.min.js.map