{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.service.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.component.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","TWAFilterEditorService","_this","processFilterOrs","filters","actualFilter","newFilters","forEach","v","bitwise","push","isgroup","newGroup","fields","filterData","filter","filterValue","comparators","=>","a","b","includes","===",">=",">","<=","<","in","split","isNumeric","isNaN","parseFloat","isFinite","retValue","filterGroup","prepareData","field","operation","value","String","toLowerCase","_a","results","l","results2","reduce","acc","v2","init","data","change","subscribe","applyFilter","processedFilters","activeFilters","slice","map","item","idx","realIndex","applyFilterToRow","this_1","Injectable","TWAFilterEditorComponent","EventEmitter","selectedField","selectedValue","editing","texts","filterBy","group","ungroup","moveLeft","moveRight","openFilter","saveFilter","clearSelection","clearAll","operations","contain","equal","greaterEqual","greater","lessEqual","less","operationsData","type","label","operator","arrayMove","arr","oldIndex","newIndex","k","undefined","splice","handleKeyboardEvent","event","keyCode","addFilter","openFilters","fileObj","document","getElementById","files","reader","FileReader","onload","JSON","parse","result","emit","readAsText","saveFilters","blob","Blob","stringify","element","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","checkFilter","sendFilter","color","dbfield","name","explanation","filterOptions","selectFilter","selected","getParentFilter","selectedAll","tmpfilter","getParentFilterInGroup","filter2","ret","moveTo","direction","toIdx","tmpidx","tmpidx2","getSelected","getInGroup","acc2","clearSelectionInGroup","changeBitwise","groupSelected","groupSelectedInGroup","ret2","groups","entireGroupSelected","entireGroupSelectedInGroup","selected2","ig","lg","ig2","lg2","createGroup","resultFilter","createInGroup","resultFilter2","groupPosition2","findIndex","groupPosition","sanitizeGroups","sanitizeGroupsInGroup","parent","removeFromGroup","removeFromGroupInGroup","idx2","tmpFilters","onStartDragFilter","_event","_filter","onDroppedFilter","console","log","previousIndex","currentIndex","uploadSet","lines","val","join","fileSet","nativeElement","removeFilter","clearFilters","onFocus","onBlur","ngOnInit","options","config","Input","Output","ViewChild","static","ElementRef","HostListener","KeyboardEvent","Component","selector","template","TWAFilterEditorModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","MatIconModule","MatSelectModule","MatChipsModule","MatInputModule","MatButtonModule","FlexLayoutModule","MatTooltipModule","MatMenuModule","DragDropModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@Injectable()\nexport class TWAFilterEditorService {\n\n    filters: FieldFilter[];\n\n    filteredData: any[];\n    filter: TWAFilterEditorComponent;\n    data: any[];\n    prepareData: Function;\n    processedFilters: any[];\n\n    init(\n        filter: TWAFilterEditorComponent,\n        data: any[],\n        prepareData?: Function\n    ) {\n        this.filter = filter;\n        this.data = data;\n        this.prepareData = prepareData;\n\n        this.filter.change.subscribe((filters: FieldFilter[]) => {\n            this.filters = filters;\n            this.applyFilter();\n        });\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n    }\n\n    applyFilter(data = this.data.slice()) {\n\n        // let data = this.data.slice();\n        let ret = true;\n        const length = data.length;\n\n        if (!this.filter) {\n            return data;\n        }\n\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n\n        this.data = data;\n\n        data = data.map((item, idx) => {\n            item.realIndex = idx;\n            return item;\n        }).filter((item: any) => {\n            ret = this.applyFilterToRow(item);\n            return ret;\n        });\n\n        return data;\n\n    }\n\n    applyFilterToRow(item) {\n\n        let ret = true;\n        const results = [];\n\n        for (let i = 0, l = this.processedFilters.length; i < l; i++) {\n            const results2 = [];\n            this.processedFilters[i].forEach((v: FieldFilter) => {\n                results2.push(this.filterData(v, item));\n            });\n            results.push(results2.reduce((acc, v) => {\n                if (!v) {\n                    acc = v;\n                }\n                return acc;\n            }, true));\n        }\n\n        if (results.length) {\n            ret = results.reduce((acc, v) => {\n                if (v) {\n                    acc = v;\n                }\n                return acc;\n            }, false);\n        } else {\n            ret = true;\n        }\n\n        return ret;\n\n    }\n\n    processFilterOrs = (filters) => {\n        let actualFilter = 0;\n        const newFilters = [];\n        filters.forEach((v, i) => {\n            if (i > 0 && v.bitwise === '||') {\n                actualFilter++;\n                newFilters.push([]);\n            }\n            if (typeof(newFilters[actualFilter]) === 'undefined') {\n                newFilters.push([]);\n            }\n            if (v.isgroup) {\n                const newGroup = {...v, fields: this.processFilterOrs(v.fields)};\n                // console.log(newGroup);\n                newFilters[actualFilter].push(newGroup);\n            } else {\n                newFilters[actualFilter].push(v);\n            }\n        });\n\n        return newFilters;\n    }\n\n    filterData = (filter: any, filterValue: any) => {\n\n      const comparators = {\n        '=>': (a: string, b: string) => a.includes(b),\n        '===': (a: any, b: any) => a === b,\n        '>=': (a: any, b: any) => a >= b,\n        '>': (a: any, b: any) => a > b,\n        '<=': (a: any, b: any) => a <= b,\n        '<': (a: any, b: any) => a < b,\n        'in': (a: any, b: any) => b.split(',').includes(a),\n      };\n      const isNumeric = (n) => {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n      };\n\n      let retValue = false;\n\n      if (filter.isgroup) {\n        retValue = this.filterGroup(filter, filterValue);\n      } else {\n        if (this.prepareData) {\n            this.prepareData(filter, filterValue);\n        }\n        try {\n          if (typeof filterValue[filter.field] === 'number' && (filter.operation !== '=>' && filter.operation !== 'in')) {\n            retValue = comparators[filter.operation](+filterValue[filter.field], +filter.value);\n          } else if ((!isNumeric(filterValue[filter.field]) || !isNumeric(filter.value)) &&\n              (typeof filterValue[filter.field] === 'string' || filterValue[filter.field] instanceof String)) {\n            retValue = comparators[filter.operation](String(filterValue[filter.field]).toLowerCase(),\n                                                      String(filter.value).toLowerCase());\n          } else if (isNumeric(filterValue[filter.field]) && isNumeric(filter.value)) {\n            retValue = comparators[filter.operation](+filterValue[filter.field], +filter.value);\n          } else {\n            retValue = comparators[filter.operation](filterValue[filter.field], filter.value);\n          }\n        } catch {\n            retValue = false;\n        }\n      }\n\n      return retValue;\n\n    }\n\n    filterGroup = (filter: any, filterValue: any) => {\n\n        const results = [];\n\n        for (let i = 0, l = filter.fields.length; i < l; i++) {\n            const results2 = [];\n            filter.fields[i].forEach((v: any[]) => {\n               results2.push(this.filterData(v, filterValue));\n            });\n            results.push(results2.reduce((acc, v2) => {\n                if (!v2) {\n                    acc = v2;\n                }\n                return acc;\n            }, true));\n        }\n\n        return results.reduce((acc, v) => {\n            if (v) {\n                acc = v;\n            }\n            return acc;\n        }, false);\n\n    }\n}\n","import { Component, OnInit, Input, Output, ElementRef, EventEmitter, ViewChild } from '@angular/core';\nimport { HostListener } from '@angular/core';\n\nimport { FilterEditorOptions, FieldFilter, FilterEditorConfig } from './twa-md2-filter-editor.interface';\n\n@Component({\n  selector: 'twa-md2-filter-editor',\n  templateUrl: './twa-md2-filter-editor.component.html',\n  styles: [\n    `\n    .error { color: red; }\n    .selector {\n        width: 100%;\n    }\n    .filter {\n        padding-bottom: 12px;\n    }\n    .filter mat-chip {\n        margin: 4px;\n    }\n    .cgroup {\n        display: flex;\n    }\n    mat-chip.selected {\n        color: #fff;\n        font-weight: bold;\n    }\n    span.group-start,\n    span.group-end {\n        font-size: 25px;\n    }\n    button.bitwise {\n        min-width: 24px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n    `\n  ]\n})\n\nexport class TWAFilterEditorComponent implements OnInit {\n\n    @Input() options: FilterEditorOptions;\n    @Input() config: FilterEditorConfig;\n    @Output() change: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    @ViewChild('fileSet', {static: true}) fileSet: ElementRef;\n    @ViewChild('oepnFiltersFile', {static: true}) openFiltersFile: ElementRef;\n\n    filterOptions: FilterEditorOptions;\n    selectedField = 'none';\n    selectedValue = '';\n    operation = 'contain';\n    activeFilters: FieldFilter[] = [];\n    editing = false;\n    texts = {\n        filterBy: 'Filter by...',\n        filter: 'filter',\n        group: 'Group',\n        ungroup: 'Ungroup',\n        moveLeft: 'Move to left',\n        moveRight: 'Move to right',\n        openFilter: 'Open saved filter',\n        saveFilter: 'Save filter',\n        clearSelection: 'Clear selection',\n        clearAll: 'Clear filters',\n\n    };\n    operations: any = {\n        contain: '=>',\n        equal: '===',\n        greaterEqual: '>=',\n        greater: '>',\n        lessEqual: '<=',\n        less: '<',\n        in: 'in',\n    };\n    operationsData = [\n        {\n            type: 'contain',\n            label: 'contains',\n            operator: '=>'\n        },\n        {\n            type: 'equal',\n            label: 'equals',\n            operator: '==='\n        },\n        {\n            type: 'greaterEqual',\n            label: 'greater or equal',\n            operator: '>='\n        },\n        {\n            type: 'greater',\n            label: 'greater',\n            operator: '>'\n        },\n        {\n            type: 'lessEqual',\n            label: 'less or equal',\n            operator: '<='\n        },\n        {\n            type: 'less',\n            label: 'less',\n            operator: '<'\n        },\n        {\n            type: 'in',\n            label: 'in',\n            operator: 'in'\n        },\n    ];\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n      // if ((event.key === 'c' && event.ctrlKey)) {\n      //     this.clearFilters();\n      // } else if (this.editing && event.keyCode === 13) {\n      //     this.addFilter();\n      // }\n      if (this.editing && event.keyCode === 13) {\n        this.addFilter();\n      }\n    }\n\n    constructor() {}\n\n    openFilters() {\n        const fileObj = (<HTMLInputElement>document.getElementById('openFiltersFile')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            // console.log(reader.result);\n            const data = JSON.parse(<string>reader.result);\n            this.activeFilters = data;\n            this.change.emit(this.activeFilters);\n        };\n        reader.readAsText(fileObj);\n    }\n\n    saveFilters() {\n        const blob = new Blob([JSON.stringify(this.activeFilters)], { type: 'text/json' });\n        const filename = 'filters.json';\n        const element = document.createElement('a');\n        element.href = window.URL.createObjectURL(blob);\n        element.download = filename;\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    checkFilter(): boolean {\n        return (this.selectedField === 'none' || this.selectedValue === '');\n    }\n\n    sendFilter() {\n        this.addFilter();\n    }\n\n    addFilter() {\n\n        // console.log('adding filter...');\n\n        let color = '',\n            field = '',\n            dbfield = '',\n            label = '',\n            name = '',\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n\n        for (let i = 0, l = this.filterOptions.fields.length; i < l; i++) {\n            if (this.filterOptions.fields[i].name === this.selectedField) {\n                // color = this.filterOptions.fields[i].color;\n                // field = this.filterOptions.fields[i].field;\n                // label = this.filterOptions.fields[i].label;\n                // name = this.filterOptions.fields[i].name;\n                /**\n                 * ...with object destructuring\n                 */\n                ({ color, field, dbfield, label, name } = this.filterOptions.fields[i]);\n                break;\n            }\n        }\n        if (this.operation === 'in') {\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' (...)';\n        } else if (this.operation === 'contain') {\n            // explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n            explanation = '\"' + this.selectedValue + '\" ' + this.operations[this.operation] + ' ' + this.selectedField;\n        }\n        this.activeFilters.push({\n            color: color,\n            explanation: explanation,\n            label: label,\n            name: name,\n            field: field,\n            dbfield: dbfield,\n            bitwise: '&&',\n            operation: this.operations[this.operation],\n            value: this.selectedValue\n        });\n        this.selectedValue = '';\n        // console.log(this.activeFilters);\n        this.change.emit(this.activeFilters);\n    }\n\n    selectFilter(filter: FieldFilter) {\n        filter.selected = !filter.selected;\n        const group = this.getParentFilter(filter);\n        if (group) {\n            let selectedAll = true;\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (!tmpfilter.isgroup && !tmpfilter.selected) {\n                    selectedAll = false;\n                }\n            }\n            if (selectedAll) {\n                group.selected = true;\n            }\n        }\n    }\n\n    getParentFilter(filter: FieldFilter): FieldFilter | null {\n        const getParentFilterInGroup = (group: FieldFilter, filter2: FieldFilter): FieldFilter | null => {\n            ret = null;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (JSON.stringify(tmpfilter) === JSON.stringify(filter2)) {\n                    return group;\n                } else if (tmpfilter.isgroup) {\n                    ret = getParentFilterInGroup(tmpfilter, filter2);\n                }\n            }\n\n            return ret;\n        };\n        let ret = null;\n        for (let i = 0, l = this.activeFilters.length; i < l; i++) {\n            const tmpfilter = this.activeFilters[i];\n            if (JSON.stringify(tmpfilter) === JSON.stringify(filter)) {\n                return null;\n            } else if (tmpfilter.isgroup) {\n                ret = getParentFilterInGroup(tmpfilter, filter);\n            }\n        }\n\n        return ret;\n    }\n\n    arrayMove = (arr: any[], oldIndex: number, newIndex: number): any[] => {\n        if (newIndex > arr.length) {\n            let k = newIndex - arr.length;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n        return arr;\n    }\n\n    moveTo(direction: number) {\n        let idx = -1,\n            toIdx = -1,\n            group = -1;\n        // Searching the selected filter...\n        this.activeFilters.forEach((filter, tmpidx) => {\n            if (filter.selected) {\n                idx = tmpidx;\n                return;\n            } else if (filter.isgroup) {\n                filter.fields.forEach((filter2, tmpidx2) => {\n                    if (filter2.selected) {\n                        idx = tmpidx2;\n                        group = tmpidx;\n                        return;\n                    }\n                });\n            }\n        });\n\n        if (idx >= 0) {\n\n            if (group >= 0) {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters[group].fields.length + direction;\n                if (toIdx >= this.activeFilters[group].fields.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters[group].fields = this.arrayMove(this.activeFilters[group].fields, idx, toIdx);\n            } else {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters.length + direction;\n                if (toIdx >= this.activeFilters.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters = this.arrayMove(this.activeFilters, idx, toIdx);\n            }\n\n        }\n\n        this.change.emit(this.activeFilters);\n\n    }\n\n    getSelected(): number {\n        const getInGroup = (group: FieldFilter) => {\n            return group.fields.reduce((acc2, filter) => {\n                if (filter.isgroup) {\n                    acc2 += getInGroup(filter);\n                } else if (filter.selected) {\n                    acc2++;\n                }\n                return acc2;\n            }, 0);\n        };\n        return this.activeFilters.reduce((acc, filter) => {\n            if (filter.isgroup) {\n                acc += getInGroup(filter);\n            } else if (filter.selected) {\n                acc++;\n            }\n            return acc;\n        }, 0);\n\n    }\n\n    clearSelection(): void {\n\n        const clearSelectionInGroup = (group) => {\n            group.fields.forEach((filter) => {\n                if (filter.isgroup) {\n                    filter = clearSelectionInGroup(filter);\n                } else {\n                    filter.selected = false;\n                }\n            });\n\n            return group;\n        };\n\n        this.activeFilters = this.activeFilters.map((filter) => {\n            if (filter.isgroup) {\n                filter = clearSelectionInGroup(filter);\n                // filter.fields = filter.fields.map((filter2) => {\n                //     filter2.selected = false;\n                //     return filter2;\n                // });\n            }\n            filter.selected = false;\n            return filter;\n        });\n\n    }\n\n    changeBitwise(filter: FieldFilter, bitwise) {\n        filter.bitwise = bitwise;\n        this.change.emit(this.activeFilters);\n    }\n\n    groupSelected(): boolean {\n        const groupSelectedInGroup = (filter: FieldFilter) => {\n            let ret2 = 0;\n            if (filter.isgroup) {\n                filter.fields.forEach((filter2) => {\n                    if (filter2.isgroup) {\n                        ret2 += groupSelectedInGroup(filter2);\n                    } else {\n                        if (filter2.selected) {\n                            ret2++;\n                        }\n                    }\n                });\n                return ret2;\n            } else {\n                if (filter.selected) {\n                    return 1;\n                }\n            }\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let ret = 0;\n        groups.forEach((group) => {\n            group.fields.forEach(filter => {\n                if (filter.isgroup) {\n                    ret += groupSelectedInGroup(filter);\n                } else if (filter.selected) {\n                    ret++;\n                }\n            });\n        });\n        return ret > 0;\n    }\n\n    entireGroupSelected(): boolean {\n        const entireGroupSelectedInGroup = (group: FieldFilter) => {\n            let selected2 = true;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const filter = group.fields[i];\n                if (filter.isgroup) {\n                    selected2 = entireGroupSelectedInGroup(filter);\n                    if (selected2) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected2 = false;\n                }\n            }\n            return selected2 && group.fields.length > 0;\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let selected = true;\n        for (let ig = 0, lg = groups.length; ig < lg; ig++) {\n            const group = groups[ig];\n            for (let ig2 = 0, lg2 = group.fields.length; ig2 < lg2; ig2++) {\n                const filter = group.fields[ig2];\n                if (filter.isgroup) {\n                    selected = entireGroupSelectedInGroup(filter);\n                    if (selected) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected = false;\n                }\n            }\n            group.fields.forEach(filter => {\n            });\n            if (selected) {\n                return true;\n            }\n        }\n        groups.forEach((group) => {\n        });\n        return selected && groups.length > 0;\n    }\n\n    createGroup(): void {\n        const createInGroup = (filter: FieldFilter) => {\n            const selected2 = filter.fields.filter(filter2 => filter2.selected),\n            groupPosition2 = filter.fields.findIndex(v => v.selected);\n            let resultFilter2: FieldFilter[];\n            if (selected2.length) {\n                resultFilter2 = filter.fields.filter(filter2 => !filter2.selected);\n                resultFilter2.splice(groupPosition2, 0, {\n                    color: '',\n                    name: '',\n                    field: '',\n                    isgroup: true,\n                    bitwise: '&&',\n                    fields: selected2\n                });\n            } else {\n                resultFilter2 = filter.fields.map(filter2 => {\n                    if (filter2.isgroup) {\n                        createInGroup(filter2);\n                    }\n                    return filter2;\n                });\n            }\n            filter.fields = resultFilter2;\n        };\n\n        const selected = this.activeFilters.filter(filter => filter.selected),\n              groupPosition = this.activeFilters.findIndex(v => v.selected);\n        let resultFilter: FieldFilter[];\n        if (selected.length) {\n            resultFilter = this.activeFilters.filter(filter => !filter.selected);\n            resultFilter.splice(groupPosition, 0, {\n                color: '',\n                name: '',\n                field: '',\n                isgroup: true,\n                bitwise: '&&',\n                fields: selected\n            });\n            this.activeFilters = resultFilter;\n        } else {\n            resultFilter = this.activeFilters.map(filter => {\n                if (filter.isgroup) {\n                    createInGroup(filter);\n                }\n                return filter;\n            });\n        }\n        this.clearSelection();\n        this.change.emit(this.activeFilters);\n    }\n\n    sanitizeGroups() {\n        const sanitizeGroupsInGroup = (group, parent?: FieldFilter) => {\n            group.fields.map((filter: FieldFilter, idx: number) => {\n                if (filter.isgroup) {\n                    if (filter.fields.length === 0) {\n                        group.fields.splice(idx, 1);\n                    } else if (filter.fields.length === 1) {\n                        // group.fields.push({...filter.fields[0]});\n                        group.fields.splice(idx, 1, {...filter.fields[0]});\n                    } else {\n                        sanitizeGroupsInGroup(filter, group);\n                    }\n                }\n            });\n        };\n        this.activeFilters.map((filter: FieldFilter, idx: number) => {\n            if (filter.isgroup) {\n                if (filter.fields.length === 0) {\n                    this.activeFilters.splice(idx, 1);\n                } else if (filter.fields.length === 1) {\n                    // this.activeFilters.push({...filter.fields[0]});\n                    this.activeFilters.splice(idx, 1, {...filter.fields[0]});\n            } else {\n                    sanitizeGroupsInGroup(filter);\n                }\n            }\n        });\n    }\n\n    removeFromGroup(): void {\n        const removeFromGroupInGroup = (group: FieldFilter, parent: FieldFilter, idx) => {\n            group.fields.forEach((filter2, idx2) => {\n                if (filter2.isgroup) {\n                    removeFromGroupInGroup(filter2, group, idx2);\n                }\n            });\n            const tmpFilters = group.fields.filter((filter2: FieldFilter) => filter2.selected);\n            group.fields = group.fields.filter((filter2: FieldFilter) => !filter2.selected);\n            tmpFilters.forEach((v: FieldFilter) => {\n                v.selected = false;\n                parent.fields.push(v);\n            });\n            if (group.fields.length === 0) {\n                parent.fields.splice(idx, 1);\n            }\n        };\n\n        this.activeFilters = this.activeFilters.reduce((newFilters, filter) => {\n            if (filter.isgroup) {\n\n                filter.fields.forEach((filter2, idx) => {\n                    if (filter2.isgroup) {\n                        removeFromGroupInGroup(filter2, filter, idx);\n                    }\n                });\n\n                const tmpFilters = filter.fields.filter(filter2 => filter2.selected);\n                filter.fields = filter.fields.filter(filter2 => !filter2.selected);\n                if (filter.fields.length) {\n                    newFilters.push(filter);\n                }\n                tmpFilters.forEach(v => {\n                    newFilters.push(v);\n                });\n            } else {\n                newFilters.push(filter);\n            }\n            return newFilters;\n        }, []);\n        this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    onStartDragFilter(_event, _filter) {\n    }\n\n    onDroppedFilter(event) {\n      console.log('dropped');\n      this.arrayMove(this.activeFilters, event.previousIndex, event.currentIndex);\n      console.log(this.activeFilters);\n        // this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    uploadSet() {\n        const fileObj = (<HTMLInputElement>document.getElementById('fileSet')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            const lines = (<string>reader.result).split(/\\r?\\n/).filter(val => val > '');\n            this.selectedValue = lines.join(', ');\n            this.fileSet.nativeElement.value = '';\n        };\n        reader.readAsText(fileObj);\n    }\n\n    removeFilter(filter: FieldFilter): void {\n        // const removeFilterInGroup = (group, filter) => {\n\n        // };\n        const parent = this.getParentFilter(filter);\n        let group: FieldFilter[];\n        if (parent) {\n            group = parent.fields;\n        } else {\n            group = this.activeFilters;\n        }\n        for (let i = 0, l = group.length; i < l; i++) {\n            if (JSON.stringify(group[i]) === JSON.stringify(filter)) {\n                group.splice(i, 1);\n                break;\n            }\n        }\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    clearFilters() {\n        this.activeFilters = [];\n        this.change.emit(this.activeFilters);\n    }\n\n    onFocus(event) {\n        this.editing = true;\n    }\n\n    onBlur(event) {\n        this.editing = false;\n    }\n\n    ngOnInit() {\n        this.filterOptions = this.options;\n        this.selectedField = (typeof this.filterOptions.fields[0] !== 'undefined') ? this.filterOptions.fields[0].name : 'none';\n        if (typeof this.config !== undefined) {\n            if (this.config && typeof this.config.operationsData !== 'undefined') {\n                this.operationsData = this.config.operationsData;\n            }\n            if (this.config && typeof this.config.filter !== 'undefined') {\n                this.activeFilters = this.config.filter.slice();\n            }\n            if (this.config && typeof this.config.texts !== 'undefined') {\n                this.texts = {...this.texts, ...this.config.texts};\n            }\n        }\n        // this.filterOptions = JSON.parse(this.options);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { TWAFilterEditorService } from './twa-md2-filter-editor.service';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatSelectModule,\n        MatChipsModule,\n        MatInputModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        MatTooltipModule,\n        MatMenuModule,\n        DragDropModule,\n    ],\n    declarations: [\n        TWAFilterEditorComponent,\n    ],\n    exports: [\n        TWAFilterEditorComponent,\n    ],\n    providers: [\n        TWAFilterEditorService\n    ]\n})\nexport class TWAFilterEditorModule {}\n"]}