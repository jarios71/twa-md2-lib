{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.service.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.component.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","TWAFilterEditorService","_this","processFilterOrs","filters","actualFilter","newFilters","forEach","v","bitwise","push","isgroup","newGroup","fields","filterData","filter","filterValue","comparators","=>","a","b","includes","===",">=",">","<=","<","in","split","retValue","filterGroup","prepareData","field","operation","value","String","toLowerCase","_a","results","l","results2","reduce","acc","v2","init","data","change","subscribe","applyFilter","processedFilters","activeFilters","slice","map","item","idx","realIndex","applyFilterToRow","this_1","Injectable","TWAFilterEditorComponent","EventEmitter","selectedField","selectedValue","editing","texts","filterBy","group","ungroup","moveLeft","moveRight","openFilter","saveFilter","clearSelection","clearAll","operations","contain","equal","greaterEqual","greater","lessEqual","less","operationsData","type","label","operator","arrayMove","arr","oldIndex","newIndex","k","undefined","splice","handleKeyboardEvent","event","key","ctrlKey","clearFilters","keyCode","addFilter","openFilters","fileObj","document","getElementById","files","reader","FileReader","onload","JSON","parse","emit","readAsText","saveFilters","blob","Blob","stringify","element","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","checkFilter","sendFilter","color","dbfield","name","explanation","filterOptions","selectFilter","selected","getParentFilter","selectedAll","tmpfilter","getParentFilterInGroup","filter2","ret","moveTo","direction","toIdx","tmpidx","tmpidx2","getSelected","getInGroup","acc2","clearSelectionInGroup","changeBitwise","groupSelected","groupSelectedInGroup","ret2","groups","entireGroupSelected","entireGroupSelectedInGroup","selected2","ig","lg","ig2","lg2","createGroup","resultFilter","createInGroup","resultFilter2","groupPosition2","findIndex","groupPosition","sanitizeGroups","sanitizeGroupsInGroup","parent","removeFromGroup","removeFromGroupInGroup","idx2","tmpFilters","onStartDragFilter","_event","_filter","onDroppedFilter","previousIndex","currentIndex","uploadSet","lines","val","join","fileSet","nativeElement","removeFilter","onFocus","onBlur","ngOnInit","options","config","Component","args","selector","template","Input","Output","ViewChild","static","HostListener","TWAFilterEditorModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","MatIconModule","MatSelectModule","MatChipsModule","MatInputModule","MatButtonModule","FlexLayoutModule","MatTooltipModule","MatMenuModule","DragDropModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@Injectable()\nexport class TWAFilterEditorService {\n\n    filters: FieldFilter[];\n\n    filteredData: any[];\n    filter: TWAFilterEditorComponent;\n    data: any[];\n    prepareData: Function;\n    processedFilters: any[];\n\n    init(\n        filter: TWAFilterEditorComponent,\n        data: any[],\n        prepareData?: Function\n    ) {\n        this.filter = filter;\n        this.data = data;\n        this.prepareData = prepareData;\n\n        this.filter.change.subscribe((filters: FieldFilter[]) => {\n            this.filters = filters;\n            this.applyFilter();\n        });\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n    }\n\n    applyFilter(data = this.data.slice()) {\n\n        // let data = this.data.slice();\n        let ret = true;\n        const length = data.length;\n\n        if (!this.filter) {\n            return data;\n        }\n\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n\n        this.data = data;\n\n        data = data.map((item, idx) => {\n            item.realIndex = idx;\n            return item;\n        }).filter((item: any) => {\n            ret = this.applyFilterToRow(item);\n            return ret;\n        });\n\n        return data;\n\n    }\n\n    applyFilterToRow(item) {\n\n        let ret = true;\n        const results = [];\n\n        for (let i = 0, l = this.processedFilters.length; i < l; i++) {\n            const results2 = [];\n            this.processedFilters[i].forEach((v: FieldFilter) => {\n                results2.push(this.filterData(v, item));\n            });\n            results.push(results2.reduce((acc, v) => {\n                if (!v) {\n                    acc = v;\n                }\n                return acc;\n            }, true));\n        }\n\n        if (results.length) {\n            ret = results.reduce((acc, v) => {\n                if (v) {\n                    acc = v;\n                }\n                return acc;\n            }, false);\n        } else {\n            ret = true;\n        }\n\n        return ret;\n\n    }\n\n    processFilterOrs = (filters) => {\n        let actualFilter = 0;\n        const newFilters = [];\n        filters.forEach((v, i) => {\n            if (i > 0 && v.bitwise === '||') {\n                actualFilter++;\n                newFilters.push([]);\n            }\n            if (typeof(newFilters[actualFilter]) === 'undefined') {\n                newFilters.push([]);\n            }\n            if (v.isgroup) {\n                const newGroup = {...v, fields: this.processFilterOrs(v.fields)};\n                // console.log(newGroup);\n                newFilters[actualFilter].push(newGroup);\n            } else {\n                newFilters[actualFilter].push(v);\n            }\n        });\n\n        return newFilters;\n    }\n\n    filterData = (filter: any, filterValue: any) => {\n\n        const comparators = {\n            '=>': (a: string, b: string) => a.includes(b),\n            '===': (a: any, b: any) => a === b,\n            '>=': (a: any, b: any) => a >= b,\n            '>': (a: any, b: any) => a > b,\n            '<=': (a: any, b: any) => a <= b,\n            '<': (a: any, b: any) => a < b,\n            'in': (a: any, b: any) => b.split(',').includes(a),\n        };\n\n        let retValue = false;\n\n        if (filter.isgroup) {\n            retValue = this.filterGroup(filter, filterValue);\n        } else {\n            if (this.prepareData) {\n                this.prepareData(filter, filterValue);\n            }\n            try {\n                if (typeof filterValue[filter.field] === 'number' && (filter.operation !== '=>' && filter.operation !== 'in')) {\n                    retValue = comparators[filter.operation](+filterValue[filter.field],\n                                                             +filter.value);\n                } else {\n                    retValue = comparators[filter.operation](String(filterValue[filter.field]).toLowerCase(),\n                                                             String(filter.value).toLowerCase());\n                }\n            } catch {\n                retValue = false;\n            }\n        }\n\n        return retValue;\n\n    }\n\n    filterGroup = (filter: any, filterValue: any) => {\n\n        const results = [];\n\n        for (let i = 0, l = filter.fields.length; i < l; i++) {\n            const results2 = [];\n            filter.fields[i].forEach((v: any[]) => {\n               results2.push(this.filterData(v, filterValue));\n            });\n            results.push(results2.reduce((acc, v2) => {\n                if (!v2) {\n                    acc = v2;\n                }\n                return acc;\n            }, true));\n        }\n\n        return results.reduce((acc, v) => {\n            if (v) {\n                acc = v;\n            }\n            return acc;\n        }, false);\n\n    }\n}\n","import { Component, OnInit, Input, Output, ElementRef, EventEmitter, ViewChild } from '@angular/core';\nimport { HostListener } from '@angular/core';\n\nimport { FilterEditorOptions, FieldFilter, FilterEditorConfig } from './twa-md2-filter-editor.interface';\n\n@Component({\n  selector: 'twa-md2-filter-editor',\n  templateUrl: './twa-md2-filter-editor.component.html',\n  styles: [\n    `\n    .error { color: red; }\n    .selector {\n        width: 100%;\n    }\n    .filter {\n        padding-bottom: 12px;\n    }\n    .filter mat-chip {\n        margin: 4px;\n    }\n    .cgroup {\n        display: flex;\n    }\n    mat-chip.selected {\n        color: #fff;\n        font-weight: bold;\n    }\n    span.group-start,\n    span.group-end {\n        font-size: 25px;\n    }\n    button.bitwise {\n        min-width: 24px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n    `\n  ]\n})\n\nexport class TWAFilterEditorComponent implements OnInit {\n\n    @Input() options: FilterEditorOptions;\n    @Input() config: FilterEditorConfig;\n    @Output() change: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    @ViewChild('fileSet', {static: true}) fileSet: ElementRef;\n    @ViewChild('oepnFiltersFile', {static: true}) openFiltersFile: ElementRef;\n\n    filterOptions: FilterEditorOptions;\n    selectedField = 'none';\n    selectedValue = '';\n    operation = 'contain';\n    activeFilters: FieldFilter[] = [];\n    editing = false;\n    texts = {\n        filterBy: 'Filter by...',\n        filter: 'filter',\n        group: 'Group',\n        ungroup: 'Ungroup',\n        moveLeft: 'Move to left',\n        moveRight: 'Move to right',\n        openFilter: 'Open saved filter',\n        saveFilter: 'Save filter',\n        clearSelection: 'Clear selection',\n        clearAll: 'Clear filters',\n\n    };\n    operations: any = {\n        contain: '=>',\n        equal: '===',\n        greaterEqual: '>=',\n        greater: '>',\n        lessEqual: '<=',\n        less: '<',\n        in: 'in',\n    };\n    operationsData = [\n        {\n            type: 'contain',\n            label: 'contains',\n            operator: '=>'\n        },\n        {\n            type: 'equal',\n            label: 'equals',\n            operator: '==='\n        },\n        {\n            type: 'greaterEqual',\n            label: 'greater or equal',\n            operator: '>='\n        },\n        {\n            type: 'greater',\n            label: 'greater',\n            operator: '>'\n        },\n        {\n            type: 'lessEqual',\n            label: 'less or equal',\n            operator: '<='\n        },\n        {\n            type: 'less',\n            label: 'less',\n            operator: '<'\n        },\n        {\n            type: 'in',\n            label: 'in',\n            operator: 'in'\n        },\n    ];\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if ((event.key === 'c' && event.ctrlKey)) {\n            this.clearFilters();\n        } else if (this.editing && event.keyCode === 13) {\n            this.addFilter();\n        }\n    }\n\n    constructor() {}\n\n    openFilters() {\n        const fileObj = (<HTMLInputElement>document.getElementById('openFiltersFile')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            // console.log(reader.result);\n            const data = JSON.parse(<string>reader.result);\n            this.activeFilters = data;\n            this.change.emit(this.activeFilters);\n        };\n        reader.readAsText(fileObj);\n    }\n\n    saveFilters() {\n        const blob = new Blob([JSON.stringify(this.activeFilters)], { type: 'text/json' });\n        const filename = 'filters.json';\n        const element = document.createElement('a');\n        element.href = window.URL.createObjectURL(blob);\n        element.download = filename;\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    checkFilter(): boolean {\n        return (this.selectedField === 'none' || this.selectedValue === '');\n    }\n\n    sendFilter() {\n        this.addFilter();\n    }\n\n    addFilter() {\n\n        // console.log('adding filter...');\n\n        let color = '',\n            field = '',\n            dbfield = '',\n            label = '',\n            name = '',\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n\n        for (let i = 0, l = this.filterOptions.fields.length; i < l; i++) {\n            if (this.filterOptions.fields[i].name === this.selectedField) {\n                // color = this.filterOptions.fields[i].color;\n                // field = this.filterOptions.fields[i].field;\n                // label = this.filterOptions.fields[i].label;\n                // name = this.filterOptions.fields[i].name;\n                /**\n                 * ...with object destructuring\n                 */\n                ({ color, field, dbfield, label, name } = this.filterOptions.fields[i]);\n                break;\n            }\n        }\n        if (this.operation === 'in') {\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' (...)';\n        } else if (this.operation === 'contain') {\n            // explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n            explanation = '\"' + this.selectedValue + '\" ' + this.operations[this.operation] + ' ' + this.selectedField;\n        }\n        this.activeFilters.push({\n            color: color,\n            explanation: explanation,\n            label: label,\n            name: name,\n            field: field,\n            dbfield: dbfield,\n            bitwise: '&&',\n            operation: this.operations[this.operation],\n            value: this.selectedValue\n        });\n        this.selectedValue = '';\n        // console.log(this.activeFilters);\n        this.change.emit(this.activeFilters);\n    }\n\n    selectFilter(filter: FieldFilter) {\n        filter.selected = !filter.selected;\n        const group = this.getParentFilter(filter);\n        if (group) {\n            let selectedAll = true;\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (!tmpfilter.isgroup && !tmpfilter.selected) {\n                    selectedAll = false;\n                }\n            }\n            if (selectedAll) {\n                group.selected = true;\n            }\n        }\n    }\n\n    getParentFilter(filter: FieldFilter): FieldFilter | null {\n        const getParentFilterInGroup = (group: FieldFilter, filter2: FieldFilter): FieldFilter | null => {\n            ret = null;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (JSON.stringify(tmpfilter) === JSON.stringify(filter2)) {\n                    return group;\n                } else if (tmpfilter.isgroup) {\n                    ret = getParentFilterInGroup(tmpfilter, filter2);\n                }\n            }\n\n            return ret;\n        };\n        let ret = null;\n        for (let i = 0, l = this.activeFilters.length; i < l; i++) {\n            const tmpfilter = this.activeFilters[i];\n            if (JSON.stringify(tmpfilter) === JSON.stringify(filter)) {\n                return null;\n            } else if (tmpfilter.isgroup) {\n                ret = getParentFilterInGroup(tmpfilter, filter);\n            }\n        }\n\n        return ret;\n    }\n\n    arrayMove = (arr: any[], oldIndex: number, newIndex: number): any[] => {\n        if (newIndex > arr.length) {\n            let k = newIndex - arr.length;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n        return arr;\n    }\n\n    moveTo(direction: number) {\n        let idx = -1,\n            toIdx = -1,\n            group = -1;\n        // Searching the selected filter...\n        this.activeFilters.forEach((filter, tmpidx) => {\n            if (filter.selected) {\n                idx = tmpidx;\n                return;\n            } else if (filter.isgroup) {\n                filter.fields.forEach((filter2, tmpidx2) => {\n                    if (filter2.selected) {\n                        idx = tmpidx2;\n                        group = tmpidx;\n                        return;\n                    }\n                });\n            }\n        });\n\n        if (idx >= 0) {\n\n            if (group >= 0) {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters[group].fields.length + direction;\n                if (toIdx >= this.activeFilters[group].fields.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters[group].fields = this.arrayMove(this.activeFilters[group].fields, idx, toIdx);\n            } else {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters.length + direction;\n                if (toIdx >= this.activeFilters.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters = this.arrayMove(this.activeFilters, idx, toIdx);\n            }\n\n        }\n\n        this.change.emit(this.activeFilters);\n\n    }\n\n    getSelected(): number {\n        const getInGroup = (group: FieldFilter) => {\n            return group.fields.reduce((acc2, filter) => {\n                if (filter.isgroup) {\n                    acc2 += getInGroup(filter);\n                } else if (filter.selected) {\n                    acc2++;\n                }\n                return acc2;\n            }, 0);\n        };\n        return this.activeFilters.reduce((acc, filter) => {\n            if (filter.isgroup) {\n                acc += getInGroup(filter);\n            } else if (filter.selected) {\n                acc++;\n            }\n            return acc;\n        }, 0);\n\n    }\n\n    clearSelection(): void {\n\n        const clearSelectionInGroup = (group) => {\n            group.fields.forEach((filter) => {\n                if (filter.isgroup) {\n                    filter = clearSelectionInGroup(filter);\n                } else {\n                    filter.selected = false;\n                }\n            });\n\n            return group;\n        };\n\n        this.activeFilters = this.activeFilters.map((filter) => {\n            if (filter.isgroup) {\n                filter = clearSelectionInGroup(filter);\n                // filter.fields = filter.fields.map((filter2) => {\n                //     filter2.selected = false;\n                //     return filter2;\n                // });\n            }\n            filter.selected = false;\n            return filter;\n        });\n\n    }\n\n    changeBitwise(filter: FieldFilter, bitwise) {\n        filter.bitwise = bitwise;\n        this.change.emit(this.activeFilters);\n    }\n\n    groupSelected(): boolean {\n        const groupSelectedInGroup = (filter: FieldFilter) => {\n            let ret2 = 0;\n            if (filter.isgroup) {\n                filter.fields.forEach((filter2) => {\n                    if (filter2.isgroup) {\n                        ret2 += groupSelectedInGroup(filter2);\n                    } else {\n                        if (filter2.selected) {\n                            ret2++;\n                        }\n                    }\n                });\n                return ret2;\n            } else {\n                if (filter.selected) {\n                    return 1;\n                }\n            }\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let ret = 0;\n        groups.forEach((group) => {\n            group.fields.forEach(filter => {\n                if (filter.isgroup) {\n                    ret += groupSelectedInGroup(filter);\n                } else if (filter.selected) {\n                    ret++;\n                }\n            });\n        });\n        return ret > 0;\n    }\n\n    entireGroupSelected(): boolean {\n        const entireGroupSelectedInGroup = (group: FieldFilter) => {\n            let selected2 = true;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const filter = group.fields[i];\n                if (filter.isgroup) {\n                    selected2 = entireGroupSelectedInGroup(filter);\n                    if (selected2) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected2 = false;\n                }\n            }\n            return selected2 && group.fields.length > 0;\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let selected = true;\n        for (let ig = 0, lg = groups.length; ig < lg; ig++) {\n            const group = groups[ig];\n            for (let ig2 = 0, lg2 = group.fields.length; ig2 < lg2; ig2++) {\n                const filter = group.fields[ig2];\n                if (filter.isgroup) {\n                    selected = entireGroupSelectedInGroup(filter);\n                    if (selected) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected = false;\n                }\n            }\n            group.fields.forEach(filter => {\n            });\n            if (selected) {\n                return true;\n            }\n        }\n        groups.forEach((group) => {\n        });\n        return selected && groups.length > 0;\n    }\n\n    createGroup(): void {\n        const createInGroup = (filter: FieldFilter) => {\n            const selected2 = filter.fields.filter(filter2 => filter2.selected),\n            groupPosition2 = filter.fields.findIndex(v => v.selected);\n            let resultFilter2: FieldFilter[];\n            if (selected2.length) {\n                resultFilter2 = filter.fields.filter(filter2 => !filter2.selected);\n                resultFilter2.splice(groupPosition2, 0, {\n                    color: '',\n                    name: '',\n                    field: '',\n                    isgroup: true,\n                    bitwise: '&&',\n                    fields: selected2\n                });\n            } else {\n                resultFilter2 = filter.fields.map(filter2 => {\n                    if (filter2.isgroup) {\n                        createInGroup(filter2);\n                    }\n                    return filter2;\n                });\n            }\n            filter.fields = resultFilter2;\n        };\n\n        const selected = this.activeFilters.filter(filter => filter.selected),\n              groupPosition = this.activeFilters.findIndex(v => v.selected);\n        let resultFilter: FieldFilter[];\n        if (selected.length) {\n            resultFilter = this.activeFilters.filter(filter => !filter.selected);\n            resultFilter.splice(groupPosition, 0, {\n                color: '',\n                name: '',\n                field: '',\n                isgroup: true,\n                bitwise: '&&',\n                fields: selected\n            });\n            this.activeFilters = resultFilter;\n        } else {\n            resultFilter = this.activeFilters.map(filter => {\n                if (filter.isgroup) {\n                    createInGroup(filter);\n                }\n                return filter;\n            });\n        }\n        this.clearSelection();\n        this.change.emit(this.activeFilters);\n    }\n\n    sanitizeGroups() {\n        const sanitizeGroupsInGroup = (group, parent?: FieldFilter) => {\n            group.fields.map((filter: FieldFilter, idx: number) => {\n                if (filter.isgroup) {\n                    if (filter.fields.length === 0) {\n                        group.fields.splice(idx, 1);\n                    } else if (filter.fields.length === 1) {\n                        // group.fields.push({...filter.fields[0]});\n                        group.fields.splice(idx, 1, {...filter.fields[0]});\n                    } else {\n                        sanitizeGroupsInGroup(filter, group);\n                    }\n                }\n            });\n        };\n        this.activeFilters.map((filter: FieldFilter, idx: number) => {\n            if (filter.isgroup) {\n                if (filter.fields.length === 0) {\n                    this.activeFilters.splice(idx, 1);\n                } else if (filter.fields.length === 1) {\n                    // this.activeFilters.push({...filter.fields[0]});\n                    this.activeFilters.splice(idx, 1, {...filter.fields[0]});\n            } else {\n                    sanitizeGroupsInGroup(filter);\n                }\n            }\n        });\n    }\n\n    removeFromGroup(): void {\n        const removeFromGroupInGroup = (group: FieldFilter, parent: FieldFilter, idx) => {\n            group.fields.forEach((filter2, idx2) => {\n                if (filter2.isgroup) {\n                    removeFromGroupInGroup(filter2, group, idx2);\n                }\n            });\n            const tmpFilters = group.fields.filter((filter2: FieldFilter) => filter2.selected);\n            group.fields = group.fields.filter((filter2: FieldFilter) => !filter2.selected);\n            tmpFilters.forEach((v: FieldFilter) => {\n                v.selected = false;\n                parent.fields.push(v);\n            });\n            if (group.fields.length === 0) {\n                parent.fields.splice(idx, 1);\n            }\n        };\n\n        this.activeFilters = this.activeFilters.reduce((newFilters, filter) => {\n            if (filter.isgroup) {\n\n                filter.fields.forEach((filter2, idx) => {\n                    if (filter2.isgroup) {\n                        removeFromGroupInGroup(filter2, filter, idx);\n                    }\n                });\n\n                const tmpFilters = filter.fields.filter(filter2 => filter2.selected);\n                filter.fields = filter.fields.filter(filter2 => !filter2.selected);\n                if (filter.fields.length) {\n                    newFilters.push(filter);\n                }\n                tmpFilters.forEach(v => {\n                    newFilters.push(v);\n                });\n            } else {\n                newFilters.push(filter);\n            }\n            return newFilters;\n        }, []);\n        this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    onStartDragFilter(_event, _filter) {\n    }\n\n    onDroppedFilter(event) {\n        this.arrayMove(this.activeFilters, event.previousIndex, event.currentIndex);\n        // this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    uploadSet() {\n        const fileObj = (<HTMLInputElement>document.getElementById('fileSet')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            const lines = (<string>reader.result).split(/\\r?\\n/).filter(val => val > '');\n            this.selectedValue = lines.join(', ');\n            this.fileSet.nativeElement.value = '';\n        };\n        reader.readAsText(fileObj);\n    }\n\n    removeFilter(filter: FieldFilter): void {\n        // const removeFilterInGroup = (group, filter) => {\n\n        // };\n        const parent = this.getParentFilter(filter);\n        let group: FieldFilter[];\n        if (parent) {\n            group = parent.fields;\n        } else {\n            group = this.activeFilters;\n        }\n        for (let i = 0, l = group.length; i < l; i++) {\n            if (JSON.stringify(group[i]) === JSON.stringify(filter)) {\n                group.splice(i, 1);\n                break;\n            }\n        }\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    clearFilters() {\n        this.activeFilters = [];\n        this.change.emit(this.activeFilters);\n    }\n\n    onFocus(event) {\n        this.editing = true;\n    }\n\n    onBlur(event) {\n        this.editing = false;\n    }\n\n    ngOnInit() {\n        this.filterOptions = this.options;\n        this.selectedField = (typeof this.filterOptions.fields[0] !== 'undefined') ? this.filterOptions.fields[0].name : 'none';\n        if (typeof this.config !== undefined) {\n            if (this.config && typeof this.config.operationsData !== 'undefined') {\n                this.operationsData = this.config.operationsData;\n            }\n            if (this.config && typeof this.config.filter !== 'undefined') {\n                this.activeFilters = this.config.filter.slice();\n            }\n            if (this.config && typeof this.config.texts !== 'undefined') {\n                this.texts = {...this.texts, ...this.config.texts};\n            }\n        }\n        // this.filterOptions = JSON.parse(this.options);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { TWAFilterEditorService } from './twa-md2-filter-editor.service';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatSelectModule,\n        MatChipsModule,\n        MatInputModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        MatTooltipModule,\n        MatMenuModule,\n        DragDropModule,\n    ],\n    declarations: [\n        TWAFilterEditorComponent,\n    ],\n    exports: [\n        TWAFilterEditorComponent,\n    ],\n    providers: [\n        TWAFilterEditorService\n    ]\n})\nexport class TWAFilterEditorModule {}\n"]}