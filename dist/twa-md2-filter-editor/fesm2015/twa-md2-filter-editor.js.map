{"version":3,"file":"twa-md2-filter-editor.js.map","sources":["ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.service.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.component.ts","ng://twa-md2-filter-editor/lib/twa-md2-filter-editor.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@Injectable()\nexport class TWAFilterEditorService {\n\n    filters: FieldFilter[];\n\n    filteredData: any[];\n    filter: TWAFilterEditorComponent;\n    data: any[];\n    prepareData: Function;\n    processedFilters: any[];\n\n    init(\n        filter: TWAFilterEditorComponent,\n        data: any[],\n        prepareData?: Function\n    ) {\n        this.filter = filter;\n        this.data = data;\n        this.prepareData = prepareData;\n\n        this.filter.change.subscribe((filters: FieldFilter[]) => {\n            this.filters = filters;\n            this.applyFilter();\n        });\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n    }\n\n    applyFilter(data = this.data.slice()) {\n\n        // let data = this.data.slice();\n        let ret = true;\n        const length = data.length;\n\n        if (!this.filter) {\n            return data;\n        }\n\n        this.processedFilters = this.processFilterOrs(this.filter.activeFilters);\n\n        this.data = data;\n\n        data = data.map((item, idx) => {\n            item.realIndex = idx;\n            return item;\n        }).filter((item: any) => {\n            ret = this.applyFilterToRow(item);\n            return ret;\n        });\n\n        return data;\n\n    }\n\n    applyFilterToRow(item) {\n\n        let ret = true;\n        const results = [];\n\n        for (let i = 0, l = this.processedFilters.length; i < l; i++) {\n            const results2 = [];\n            this.processedFilters[i].forEach((v: FieldFilter) => {\n                results2.push(this.filterData(v, item));\n            });\n            results.push(results2.reduce((acc, v) => {\n                if (!v) {\n                    acc = v;\n                }\n                return acc;\n            }, true));\n        }\n\n        if (results.length) {\n            ret = results.reduce((acc, v) => {\n                if (v) {\n                    acc = v;\n                }\n                return acc;\n            }, false);\n        } else {\n            ret = true;\n        }\n\n        return ret;\n\n    }\n\n    processFilterOrs = (filters) => {\n        let actualFilter = 0;\n        const newFilters = [];\n        filters.forEach((v, i) => {\n            if (i > 0 && v.bitwise === '||') {\n                actualFilter++;\n                newFilters.push([]);\n            }\n            if (typeof(newFilters[actualFilter]) === 'undefined') {\n                newFilters.push([]);\n            }\n            if (v.isgroup) {\n                const newGroup = {...v, fields: this.processFilterOrs(v.fields)};\n                // console.log(newGroup);\n                newFilters[actualFilter].push(newGroup);\n            } else {\n                newFilters[actualFilter].push(v);\n            }\n        });\n\n        return newFilters;\n    }\n\n    filterData = (filter: any, filterValue: any) => {\n\n        const comparators = {\n            '=>': (a: string, b: string) => a.includes(b),\n            '===': (a: any, b: any) => a === b,\n            '>=': (a: any, b: any) => a >= b,\n            '>': (a: any, b: any) => a > b,\n            '<=': (a: any, b: any) => a <= b,\n            '<': (a: any, b: any) => a < b,\n            'in': (a: any, b: any) => b.split(',').includes(a),\n        };\n\n        let retValue = false;\n\n        if (filter.isgroup) {\n            retValue = this.filterGroup(filter, filterValue);\n        } else {\n            if (this.prepareData) {\n                this.prepareData(filter, filterValue);\n            }\n            try {\n                if (typeof filterValue[filter.field] === 'number' && (filter.operation !== '=>' && filter.operation !== 'in')) {\n                    retValue = comparators[filter.operation](+filterValue[filter.field],\n                                                             +filter.value);\n                } else {\n                    retValue = comparators[filter.operation](String(filterValue[filter.field]).toLowerCase(),\n                                                             String(filter.value).toLowerCase());\n                }\n            } catch {\n                retValue = false;\n            }\n        }\n\n        return retValue;\n\n    }\n\n    filterGroup = (filter: any, filterValue: any) => {\n\n        const results = [];\n\n        for (let i = 0, l = filter.fields.length; i < l; i++) {\n            const results2 = [];\n            filter.fields[i].forEach((v: any[]) => {\n               results2.push(this.filterData(v, filterValue));\n            });\n            results.push(results2.reduce((acc, v2) => {\n                if (!v2) {\n                    acc = v2;\n                }\n                return acc;\n            }, true));\n        }\n\n        return results.reduce((acc, v) => {\n            if (v) {\n                acc = v;\n            }\n            return acc;\n        }, false);\n\n    }\n}\n","import { Component, OnInit, Input, Output, ElementRef, EventEmitter, ViewChild } from '@angular/core';\nimport { HostListener } from '@angular/core';\n\nimport { FilterEditorOptions, FieldFilter, FilterEditorConfig } from './twa-md2-filter-editor.interface';\n\n@Component({\n  selector: 'twa-md2-filter-editor',\n  template: `<div fxLayout=\"column\" style=\"width: 100%;\">\n    <div class=\"selector\" fxLayout=\"row\" fxLayoutGap=\"10px\">\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"selectedField\">\n                <mat-option selected value=\"none\">{{texts.filterBy}}</mat-option>\n                <mat-option *ngFor=\"let field of filterOptions.fields\" [(value)]=\"field.name\">{{field.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"operation\">\n                <mat-option *ngFor=\"let op of operationsData\" value=\"{{op.type}}\">{{op.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"{{texts.filter}}\" [(ngModel)]=\"selectedValue\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" />\n            <button mat-button *ngIf=\"operation==='in'\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"fileSet.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </mat-form-field>\n        <div>\n            <button mat-button mat-icon-button (click)=\"addFilter()\" [disabled]=\"checkFilter()\">\n                <mat-icon>send</mat-icon>\n            </button>\n        </div>\n        <div fxFlex></div>\n        <button mat-button mat-icon-button\n                *ngIf=\"activeFilters.length === 0\"\n                matTooltip=\"{{texts.openFilter}}\"\n                (click)=\"openFiltersFile.click()\">\n            <mat-icon>folder_open</mat-icon>\n        </button>\n        <div class=\"tools\" *ngIf=\"activeFilters.length > 0\" fxLayout=\"row\">\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.group}}\"\n                    (click)=\"createGroup()\"\n                    [disabled]=\"getSelected() < 2\">\n                <mat-icon>link</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.ungroup}}\"\n                    (click)=\"removeFromGroup()\"\n                    [disabled]=\"!groupSelected()\">\n                <mat-icon>link_off</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.moveLeft}}\"\n                    (click)=\"moveTo(-1)\"\n                    [disabled]=\"getSelected() !== 1 && !entireGroupSelected()\">\n                <mat-icon>arrow_back</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.moveRight}}\"\n                    (click)=\"moveTo(1)\"\n                    [disabled]=\"getSelected() !== 1 && !entireGroupSelected()\">\n                <mat-icon>arrow_forward</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.openFilter}}\"\n                    (click)=\"openFiltersFile.click()\">\n                <mat-icon>folder_open</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.saveFilter}}\"\n                    [disabled]=\"getSelected() > 1\"\n                    (click)=\"saveFilters()\">\n                <mat-icon>save</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.clearSelection}}\"\n                    [disabled]=\"getSelected() < 1\"\n                    (click)=\"clearSelection()\">\n                <mat-icon>clear</mat-icon>\n            </button>\n            <button mat-button mat-icon-button\n                    matTooltip=\"{{texts.clearAll}}\"\n                    [disabled]=\"activeFilters.length < 1\"\n                    (click)=\"clearFilters()\">\n                <mat-icon>clear_all</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"filter\" fxLayoutGap=\"12\">\n        <mat-chip-list cdkDropList\n                        cdkDropListOrientation=\"horizontal\"\n                        (cdkDropListDropped)=\"onDroppedFilter($event)\">\n            <ng-container *ngFor=\"let filter of activeFilters; let idx = index\">\n                <div fxLayout=\"row\"\n                cdkDrag\n                (cdkDragStarted)=\"onStartDragFilter($event, filter)\" [ngClass]=\"{'cgroup': filter.isgroup}\">\n                    <button mat-button *ngIf=\"idx > 0\" [matMenuTriggerFor]=\"menu\" class=\"bitwise\">{{filter.bitwise}}</button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"changeBitwise(filter, '&&')\">&&</button>\n                        <button mat-menu-item (click)=\"changeBitwise(filter, '||')\">||</button>\n                    </mat-menu>\n                    <mat-chip color=\"{{filter.color}}\" selected=\"true\"\n                                id=\"filter-{{idx}}\"\n                                [removable]=\"true\" (removed)=\"removeFilter(filter)\"\n                                [matTooltip]=\"filter.value\"\n                                [matTooltipDisabled]=\"filter.operation!=='in'\"\n                                matTooltipShowDelay=\"1500\"\n                                (click)=\"selectFilter(filter)\"\n                                *ngIf=\"!filter.isgroup\"\n                                [ngClass]=\"{'selected': filter.selected, 'mat-accent': filter.selected}\">\n                        {{filter.explanation}}\n                        <mat-icon matChipRemove>cancel</mat-icon>\n                    </mat-chip>\n                    <div *ngIf=\"filter.isgroup\" fxLayout=\"row\">\n                        <div *ngTemplateOutlet=\"group; context: { filter: this.filter, idx: this.idx}\" fxLayout=\"row\">\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </mat-chip-list>\n    </div>\n</div>\n<input style=\"visibilty: hidden; height: 0px; width: 0px;\" type=\"file\" id=\"fileSet\" #fileSet (change)=\"uploadSet()\" />\n<input style=\"visibilty: hidden; height: 0px; width: 0px;\" type=\"file\" id=\"openFiltersFile\" #openFiltersFile (change)=\"openFilters()\" />\n<ng-template #group let-filter=\"filter\" let-idx=\"idx\">\n    <span class=\"group-start\">(</span>\n    <ng-container *ngFor=\"let filter2 of filter.fields; let idx2 = index\">\n        <button mat-button *ngIf=\"idx2 > 0\" [matMenuTriggerFor]=\"menu2\"\n                class=\"bitwise\">\n            {{filter2.bitwise}}\n        </button>\n        <mat-menu #menu2=\"matMenu\">\n            <button mat-menu-item (click)=\"changeBitwise(filter2, '&&')\">&&</button>\n            <button mat-menu-item (click)=\"changeBitwise(filter2, '||')\">||</button>\n        </mat-menu>\n        <div>\n            <mat-chip color=\"{{filter.color}}\" selected=\"true\"\n                id=\"filter-{{idx}}-{{idx2}}\"\n                [removable]=\"true\" (removed)=\"removeFilter(filter2)\"\n                [matTooltip]=\"filter2.value\"\n                [matTooltipDisabled]=\"filter.operation!=='in'\"\n                matTooltipShowDelay=\"1500\"\n                (click)=\"selectFilter(filter2)\"\n                [ngClass]=\"{'selected': filter2.selected, 'mat-accent': filter2.selected}\"\n                *ngIf=\"!filter2.isgroup\"\n            >{{filter2.explanation}}\n                <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <div *ngIf=\"filter2.isgroup\" fxLayout=\"row\">\n                <div *ngTemplateOutlet=\"group; context: { filter: this.filter2, idx: this.idx2}\">\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <span class=\"group-end\">)</span>\n</ng-template>\n`,\n  styles: [\n    `\n    .error { color: red; }\n    .selector {\n        width: 100%;\n    }\n    .filter {\n        padding-bottom: 12px;\n    }\n    .filter mat-chip {\n        margin: 4px;\n    }\n    .cgroup {\n        display: flex;\n    }\n    mat-chip.selected {\n        color: #fff;\n        font-weight: bold;\n    }\n    span.group-start,\n    span.group-end {\n        font-size: 25px;\n    }\n    button.bitwise {\n        min-width: 24px;\n        padding-left: 0;\n        padding-right: 0;\n    }\n    `\n  ]\n})\n\nexport class TWAFilterEditorComponent implements OnInit {\n\n    @Input() options: FilterEditorOptions;\n    @Input() config: FilterEditorConfig;\n    @Output() change: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    @ViewChild('fileSet') fileSet: ElementRef;\n    @ViewChild('oepnFiltersFile') openFiltersFile: ElementRef;\n\n    filterOptions: FilterEditorOptions;\n    selectedField = 'none';\n    selectedValue = '';\n    operation = 'contain';\n    activeFilters: FieldFilter[] = [];\n    editing = false;\n    texts = {\n        filterBy: 'Filter by...',\n        filter: 'filter',\n        group: 'Group',\n        ungroup: 'Ungroup',\n        moveLeft: 'Move to left',\n        moveRight: 'Move to right',\n        openFilter: 'Open saved filter',\n        saveFilter: 'Save filter',\n        clearSelection: 'Clear selection',\n        clearAll: 'Clear filters',\n\n    };\n    operations: any = {\n        contain: '=>',\n        equal: '===',\n        greaterEqual: '>=',\n        greater: '>',\n        lessEqual: '<=',\n        less: '<',\n        in: 'in',\n    };\n    operationsData = [\n        {\n            type: 'contain',\n            label: 'contains',\n            operator: '=>'\n        },\n        {\n            type: 'equal',\n            label: 'equals',\n            operator: '==='\n        },\n        {\n            type: 'greaterEqual',\n            label: 'greater or equal',\n            operator: '>='\n        },\n        {\n            type: 'greater',\n            label: 'greater',\n            operator: '>'\n        },\n        {\n            type: 'lessEqual',\n            label: 'less or equal',\n            operator: '<='\n        },\n        {\n            type: 'less',\n            label: 'less',\n            operator: '<'\n        },\n        {\n            type: 'in',\n            label: 'in',\n            operator: 'in'\n        },\n    ];\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if ((event.key === 'c' && event.ctrlKey)) {\n            this.clearFilters();\n        } else if (this.editing && event.keyCode === 13) {\n            this.addFilter();\n        }\n    }\n\n    constructor() {}\n\n    openFilters() {\n        const fileObj = (<HTMLInputElement>document.getElementById('openFiltersFile')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            console.log(reader.result);\n            const data = JSON.parse(<string>reader.result);\n            this.activeFilters = data;\n        };\n        reader.readAsText(fileObj);\n    }\n\n    saveFilters() {\n        const blob = new Blob([JSON.stringify(this.activeFilters)], { type: 'text/json' });\n        const filename = 'filters.json';\n        const element = document.createElement('a');\n        element.href = window.URL.createObjectURL(blob);\n        element.download = filename;\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    checkFilter(): boolean {\n        return (this.selectedField === 'none' || this.selectedValue === '');\n    }\n\n    addFilter() {\n        let color = '',\n            field = '',\n            dbfield = '',\n            label = '',\n            name = '',\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n\n        for (let i = 0, l = this.filterOptions.fields.length; i < l; i++) {\n            if (this.filterOptions.fields[i].name === this.selectedField) {\n                // color = this.filterOptions.fields[i].color;\n                // field = this.filterOptions.fields[i].field;\n                // label = this.filterOptions.fields[i].label;\n                // name = this.filterOptions.fields[i].name;\n                /**\n                 * ...with object destructuring\n                 */\n                ({ color, field, dbfield, label, name } = this.filterOptions.fields[i]);\n                break;\n            }\n        }\n        if (this.operation === 'in') {\n            explanation = this.selectedField + ' ' + this.operations[this.operation] + ' (...)';\n        } else if (this.operation === 'contain') {\n            // explanation = this.selectedField + ' ' + this.operations[this.operation] + ' ' + this.selectedValue;\n            explanation = '\"' + this.selectedValue + '\" ' + this.operations[this.operation] + ' ' + this.selectedField;\n        }\n        this.activeFilters.push({\n            color: color,\n            explanation: explanation,\n            label: label,\n            name: name,\n            field: field,\n            dbfield: dbfield,\n            bitwise: '&&',\n            operation: this.operations[this.operation],\n            value: this.selectedValue\n        });\n        this.selectedValue = '';\n        this.change.emit(this.activeFilters);\n    }\n\n    selectFilter(filter: FieldFilter) {\n        filter.selected = !filter.selected;\n        const group = this.getParentFilter(filter);\n        if (group) {\n            let selectedAll = true;\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (!tmpfilter.isgroup && !tmpfilter.selected) {\n                    selectedAll = false;\n                }\n            }\n            if (selectedAll) {\n                group.selected = true;\n            }\n        }\n    }\n\n    getParentFilter(filter: FieldFilter): FieldFilter | null {\n        const getParentFilterInGroup = (group: FieldFilter, filter2: FieldFilter): FieldFilter | null => {\n            ret = null;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const tmpfilter = group.fields[i];\n                if (JSON.stringify(tmpfilter) === JSON.stringify(filter2)) {\n                    return group;\n                } else if (tmpfilter.isgroup) {\n                    ret = getParentFilterInGroup(tmpfilter, filter2);\n                }\n            }\n\n            return ret;\n        };\n        let ret = null;\n        for (let i = 0, l = this.activeFilters.length; i < l; i++) {\n            const tmpfilter = this.activeFilters[i];\n            if (JSON.stringify(tmpfilter) === JSON.stringify(filter)) {\n                return null;\n            } else if (tmpfilter.isgroup) {\n                ret = getParentFilterInGroup(tmpfilter, filter);\n            }\n        }\n\n        return ret;\n    }\n\n    arrayMove = (arr: any[], oldIndex: number, newIndex: number): any[] => {\n        if (newIndex > arr.length) {\n            let k = newIndex - arr.length;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n        return arr;\n    }\n\n    moveTo(direction: number) {\n        let idx = -1,\n            toIdx = -1,\n            group = -1;\n        // Searching the selected filter...\n        this.activeFilters.forEach((filter, tmpidx) => {\n            if (filter.selected) {\n                idx = tmpidx;\n                return;\n            } else if (filter.isgroup) {\n                filter.fields.forEach((filter2, tmpidx2) => {\n                    if (filter2.selected) {\n                        idx = tmpidx2;\n                        group = tmpidx;\n                        return;\n                    }\n                });\n            }\n        });\n\n        if (idx >= 0) {\n\n            if (group >= 0) {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters[group].fields.length + direction;\n                if (toIdx >= this.activeFilters[group].fields.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters[group].fields = this.arrayMove(this.activeFilters[group].fields, idx, toIdx);\n            } else {\n                toIdx = (idx + direction) >= 0 ? idx + direction : this.activeFilters.length + direction;\n                if (toIdx >= this.activeFilters.length) {\n                    toIdx = 0;\n                }\n                this.activeFilters = this.arrayMove(this.activeFilters, idx, toIdx);\n            }\n\n        }\n\n        this.change.emit(this.activeFilters);\n\n    }\n\n    getSelected(): number {\n        const getInGroup = (group: FieldFilter) => {\n            return group.fields.reduce((acc2, filter) => {\n                if (filter.isgroup) {\n                    acc2 += getInGroup(filter);\n                } else if (filter.selected) {\n                    acc2++;\n                }\n                return acc2;\n            }, 0);\n        };\n        return this.activeFilters.reduce((acc, filter) => {\n            if (filter.isgroup) {\n                acc += getInGroup(filter);\n            } else if (filter.selected) {\n                acc++;\n            }\n            return acc;\n        }, 0);\n\n    }\n\n    clearSelection(): void {\n\n        const clearSelectionInGroup = (group) => {\n            group.fields.forEach((filter) => {\n                if (filter.isgroup) {\n                    filter = clearSelectionInGroup(filter);\n                } else {\n                    filter.selected = false;\n                }\n            });\n\n            return group;\n        };\n\n        this.activeFilters = this.activeFilters.map((filter) => {\n            if (filter.isgroup) {\n                filter = clearSelectionInGroup(filter);\n                // filter.fields = filter.fields.map((filter2) => {\n                //     filter2.selected = false;\n                //     return filter2;\n                // });\n            }\n            filter.selected = false;\n            return filter;\n        });\n\n    }\n\n    changeBitwise(filter: FieldFilter, bitwise) {\n        filter.bitwise = bitwise;\n        this.change.emit(this.activeFilters);\n    }\n\n    groupSelected(): boolean {\n        const groupSelectedInGroup = (filter: FieldFilter) => {\n            let ret2 = 0;\n            if (filter.isgroup) {\n                filter.fields.forEach((filter2) => {\n                    if (filter2.isgroup) {\n                        ret2 += groupSelectedInGroup(filter2);\n                    } else {\n                        if (filter2.selected) {\n                            ret2++;\n                        }\n                    }\n                });\n                return ret2;\n            } else {\n                if (filter.selected) {\n                    return 1;\n                }\n            }\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let ret = 0;\n        groups.forEach((group) => {\n            group.fields.forEach(filter => {\n                if (filter.isgroup) {\n                    ret += groupSelectedInGroup(filter);\n                } else if (filter.selected) {\n                    ret++;\n                }\n            });\n        });\n        return ret > 0;\n    }\n\n    entireGroupSelected(): boolean {\n        const entireGroupSelectedInGroup = (group: FieldFilter) => {\n            let selected2 = true;\n\n            for (let i = 0, l = group.fields.length; i < l; i++) {\n                const filter = group.fields[i];\n                if (filter.isgroup) {\n                    selected2 = entireGroupSelectedInGroup(filter);\n                    if (selected2) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected2 = false;\n                }\n            }\n            return selected2 && group.fields.length > 0;\n        };\n        const groups = this.activeFilters.filter(filter => filter.isgroup);\n        let selected = true;\n        for (let ig = 0, lg = groups.length; ig < lg; ig++) {\n            const group = groups[ig];\n            for (let ig2 = 0, lg2 = group.fields.length; ig2 < lg2; ig2++) {\n                const filter = group.fields[ig2];\n                if (filter.isgroup) {\n                    selected = entireGroupSelectedInGroup(filter);\n                    if (selected) {\n                        return true;\n                    }\n                } else if (!filter.selected) {\n                    selected = false;\n                }\n            }\n            group.fields.forEach(filter => {\n            });\n            if (selected) {\n                return true;\n            }\n        }\n        groups.forEach((group) => {\n        });\n        return selected && groups.length > 0;\n    }\n\n    createGroup(): void {\n        const createInGroup = (filter: FieldFilter) => {\n            const selected2 = filter.fields.filter(filter2 => filter2.selected),\n            groupPosition2 = filter.fields.findIndex(v => v.selected);\n            let resultFilter2: FieldFilter[];\n            if (selected2.length) {\n                resultFilter2 = filter.fields.filter(filter2 => !filter2.selected);\n                resultFilter2.splice(groupPosition2, 0, {\n                    color: '',\n                    name: '',\n                    field: '',\n                    isgroup: true,\n                    bitwise: '&&',\n                    fields: selected2\n                });\n            } else {\n                resultFilter2 = filter.fields.map(filter2 => {\n                    if (filter2.isgroup) {\n                        createInGroup(filter2);\n                    }\n                    return filter2;\n                });\n            }\n            filter.fields = resultFilter2;\n        };\n\n        const selected = this.activeFilters.filter(filter => filter.selected),\n              groupPosition = this.activeFilters.findIndex(v => v.selected);\n        let resultFilter: FieldFilter[];\n        if (selected.length) {\n            resultFilter = this.activeFilters.filter(filter => !filter.selected);\n            resultFilter.splice(groupPosition, 0, {\n                color: '',\n                name: '',\n                field: '',\n                isgroup: true,\n                bitwise: '&&',\n                fields: selected\n            });\n            this.activeFilters = resultFilter;\n        } else {\n            resultFilter = this.activeFilters.map(filter => {\n                if (filter.isgroup) {\n                    createInGroup(filter);\n                }\n                return filter;\n            });\n        }\n        this.clearSelection();\n        this.change.emit(this.activeFilters);\n    }\n\n    sanitizeGroups() {\n        const sanitizeGroupsInGroup = (group, parent?: FieldFilter) => {\n            group.fields.map((filter: FieldFilter, idx: number) => {\n                if (filter.isgroup) {\n                    if (filter.fields.length === 0) {\n                        group.fields.splice(idx, 1);\n                    } else if (filter.fields.length === 1) {\n                        // group.fields.push({...filter.fields[0]});\n                        group.fields.splice(idx, 1, {...filter.fields[0]});\n                    } else {\n                        sanitizeGroupsInGroup(filter, group);\n                    }\n                }\n            });\n        };\n        this.activeFilters.map((filter: FieldFilter, idx: number) => {\n            if (filter.isgroup) {\n                if (filter.fields.length === 0) {\n                    this.activeFilters.splice(idx, 1);\n                } else if (filter.fields.length === 1) {\n                    // this.activeFilters.push({...filter.fields[0]});\n                    this.activeFilters.splice(idx, 1, {...filter.fields[0]});\n            } else {\n                    sanitizeGroupsInGroup(filter);\n                }\n            }\n        });\n    }\n\n    removeFromGroup(): void {\n        const removeFromGroupInGroup = (group: FieldFilter, parent: FieldFilter, idx) => {\n            group.fields.forEach((filter2, idx2) => {\n                if (filter2.isgroup) {\n                    removeFromGroupInGroup(filter2, group, idx2);\n                }\n            });\n            const tmpFilters = group.fields.filter((filter2: FieldFilter) => filter2.selected);\n            group.fields = group.fields.filter((filter2: FieldFilter) => !filter2.selected);\n            tmpFilters.forEach((v: FieldFilter) => {\n                v.selected = false;\n                parent.fields.push(v);\n            });\n            if (group.fields.length === 0) {\n                parent.fields.splice(idx, 1);\n            }\n        };\n\n        this.activeFilters = this.activeFilters.reduce((newFilters, filter) => {\n            if (filter.isgroup) {\n\n                filter.fields.forEach((filter2, idx) => {\n                    if (filter2.isgroup) {\n                        removeFromGroupInGroup(filter2, filter, idx);\n                    }\n                });\n\n                const tmpFilters = filter.fields.filter(filter2 => filter2.selected);\n                filter.fields = filter.fields.filter(filter2 => !filter2.selected);\n                if (filter.fields.length) {\n                    newFilters.push(filter);\n                }\n                tmpFilters.forEach(v => {\n                    newFilters.push(v);\n                });\n            } else {\n                newFilters.push(filter);\n            }\n            return newFilters;\n        }, []);\n        this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    onStartDragFilter(_event, _filter) {\n    }\n\n    onDroppedFilter(event) {\n        this.arrayMove(this.activeFilters, event.previousIndex, event.currentIndex);\n        // this.clearSelection();\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    uploadSet() {\n        const fileObj = (<HTMLInputElement>document.getElementById('fileSet')).files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n            const lines = (<string>reader.result).split(/\\r?\\n/).filter(val => val > '');\n            this.selectedValue = lines.join(', ');\n            this.fileSet.nativeElement.value = '';\n        };\n        reader.readAsText(fileObj);\n    }\n\n    removeFilter(filter: FieldFilter): void {\n        // const removeFilterInGroup = (group, filter) => {\n\n        // };\n        const parent = this.getParentFilter(filter);\n        let group: FieldFilter[];\n        if (parent) {\n            group = parent.fields;\n        } else {\n            group = this.activeFilters;\n        }\n        for (let i = 0, l = group.length; i < l; i++) {\n            if (JSON.stringify(group[i]) === JSON.stringify(filter)) {\n                group.splice(i, 1);\n                break;\n            }\n        }\n        this.sanitizeGroups();\n        this.change.emit(this.activeFilters);\n    }\n\n    clearFilters() {\n        this.activeFilters = [];\n        this.change.emit(this.activeFilters);\n    }\n\n    onFocus(event) {\n        this.editing = true;\n    }\n\n    onBlur(event) {\n        this.editing = false;\n    }\n\n    ngOnInit() {\n        this.filterOptions = this.options;\n        this.selectedField = (typeof this.filterOptions.fields[0] !== 'undefined') ? this.filterOptions.fields[0].name : 'none';\n        if (typeof this.config !== undefined) {\n            if (this.config && typeof this.config.operationsData !== 'undefined') {\n                this.operationsData = this.config.operationsData;\n            }\n            if (this.config && typeof this.config.filter !== 'undefined') {\n                this.activeFilters = this.config.filter.slice();\n            }\n            if (this.config && typeof this.config.texts !== 'undefined') {\n                this.texts = {...this.texts, ...this.config.texts};\n            }\n        }\n        // this.filterOptions = JSON.parse(this.options);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { TWAFilterEditorComponent } from './twa-md2-filter-editor.component';\nimport { TWAFilterEditorService } from './twa-md2-filter-editor.service';\nimport { FieldFilter } from './twa-md2-filter-editor.interface';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatSelectModule,\n        MatChipsModule,\n        MatInputModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        MatTooltipModule,\n        MatMenuModule,\n        DragDropModule,\n    ],\n    declarations: [\n        TWAFilterEditorComponent,\n    ],\n    exports: [\n        TWAFilterEditorComponent,\n    ],\n    providers: [\n        TWAFilterEditorService\n    ]\n})\nexport class TWAFilterEditorModule {}\n"],"names":[],"mappings":"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"}
